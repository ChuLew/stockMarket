{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/dashboard/Chart.js\";\nimport React from \"react\";\nimport { ResponsiveContainer } from \"recharts\";\nimport Title from \"./Title\";\nimport Plot from 'react-plotly.js';\nimport { connect } from 'react-redux';\nimport { getStocks } from '../actions';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: [],\n      historics: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n    this.props.getStocks(this.props.currentCompany);\n    this.setState({\n      historics: this.props.historics\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"gothere\");\n\n    if (prevProps.currCompany !== this.props.currCompany) {\n      //this.props.getStocks(this.props.currentCompany);\n      this.fetchStock();\n\n      if (this.props.historics === undefined) {\n        this.setState({\n          historics: prevProps.historics\n        });\n      }\n    }\n  }\n\n  fetchStock() {\n    // const pointerToThis = this;\n    // console.log(pointerToThis);\n    // const API_KEY = '82N2UO66AVHA2EFY';\n    // let StockSymbol = pointerToThis.props.currCompany;\n    // let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = []; // fetch(API_Call)\n    //   .then(\n    //     function(response) {\n    //       return response.json();\n    //     }\n    //   )\n    //   .then(\n    //     function(data) {\n    //       //console.log(data);\n    //       for (var key in data['Time Series (Daily)']) {\n    //         stockChartXValuesFunction.push(key);\n    //         stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n    //       }\n    //       // console.log(stockChartXValuesFunction);\n    //       pointerToThis.setState({\n    //         stockChartXValues: stockChartXValuesFunction,\n    //         stockChartYValues: stockChartYValuesFunction\n    //       });\n    //     }\n    //   )\n\n    for (var key in this.props.historics) {\n      stockChartXValuesFunction.push(key);\n      stockChartYValuesFunction.push(this.props.historics[key]['1. open']);\n    }\n\n    this.setState({\n      stockChartXValues: stockChartXValuesFunction,\n      stockChartYValues: stockChartYValuesFunction,\n      historics: this.props.historics\n    });\n    console.log(this.props.historics);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, \"Today\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Plot, {\n      data: [{\n        x: this.state.stockChartXValues,\n        y: this.state.stockChartYValues,\n        type: 'scatter',\n        mode: 'lines+markers',\n        marker: {\n          color: 'red'\n        }\n      }],\n      layout: {\n        width: 850,\n        height: 440,\n        title: this.props.currCompany\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currCompany: state.stocks.currentCompany,\n    historics: state.stocks.companyInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStocks\n})(Chart);","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/dashboard/Chart.js"],"names":["React","ResponsiveContainer","Title","Plot","connect","getStocks","Chart","Component","constructor","props","state","stockChartXValues","stockChartYValues","historics","componentDidMount","fetchStock","currentCompany","setState","componentDidUpdate","prevProps","prevState","console","log","currCompany","undefined","stockChartXValuesFunction","stockChartYValuesFunction","key","push","render","x","y","type","mode","marker","color","width","height","title","mapStateToProps","stocks","companyInfo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {ResponsiveContainer} from \"recharts\";\nimport Title from \"./Title\";\nimport Plot from 'react-plotly.js';\nimport { connect } from 'react-redux';\nimport { getStocks } from '../actions';\n\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: [],\n      historics: {}\n    }\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n    this.props.getStocks(this.props.currentCompany);\n    this.setState({historics:this.props.historics});\n  }\n  componentDidUpdate(prevProps,prevState){\n    console.log(\"gothere\");\n    if(prevProps.currCompany!==this.props.currCompany){\n      //this.props.getStocks(this.props.currentCompany);\n      this.fetchStock();\n      if(this.props.historics=== undefined){\n        this.setState({historics:prevProps.historics})\n      }\n    }\n  }\n\n  fetchStock() {\n    // const pointerToThis = this;\n    // console.log(pointerToThis);\n    // const API_KEY = '82N2UO66AVHA2EFY';\n    // let StockSymbol = pointerToThis.props.currCompany;\n    // let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n     let stockChartXValuesFunction = [];\n     let stockChartYValuesFunction = [];\n\n    // fetch(API_Call)\n    //   .then(\n    //     function(response) {\n    //       return response.json();\n    //     }\n    //   )\n    //   .then(\n    //     function(data) {\n    //       //console.log(data);\n\n    //       for (var key in data['Time Series (Daily)']) {\n    //         stockChartXValuesFunction.push(key);\n    //         stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n    //       }\n\n    //       // console.log(stockChartXValuesFunction);\n    //       pointerToThis.setState({\n    //         stockChartXValues: stockChartXValuesFunction,\n    //         stockChartYValues: stockChartYValuesFunction\n    //       });\n    //     }\n    //   )\n    for (var key in this.props.historics) {\n      stockChartXValuesFunction.push(key);\n      stockChartYValuesFunction.push(this.props.historics[key]['1. open']);\n    }\n    this.setState({\n      stockChartXValues: stockChartXValuesFunction,\n      stockChartYValues: stockChartYValuesFunction,\n      historics:this.props.historics\n    })\n    console.log(this.props.historics);\n  }\n  render() {\n    return  (\n      <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n      <Plot\n          data={[\n            {\n              x: this.state.stockChartXValues,\n              y: this.state.stockChartYValues,\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: {color: 'red'},\n            }\n          ]}\n          layout={{width: 850, height: 440, title: this.props.currCompany }}\n        />\n      </ResponsiveContainer>\n    </React.Fragment>\n    );\n  };\n}\nconst mapStateToProps = (state) => {\n  return {\n    currCompany:state.stocks.currentCompany,\n    historics:state.stocks.companyInfo\n    \n  };\n};\nexport default connect(\n  mapStateToProps,\n  { getStocks }\n)(Chart);\n"]},"metadata":{},"sourceType":"module"}