{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/Streaming/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchStream(id);\n    this.buildPlayer();\n  }\n\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  buildPlayer() {\n    const {\n      id\n    } = this.props.match.params;\n\n    if (this.player || !this.props.stream) {\n      return;\n    }\n\n    this.player = flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${id}`\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, \" Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoRef,\n      style: {\n        width: '100%'\n      },\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, this.props.stream.title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, this.props.stream.description));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/mitchlew/Documents/Streaming/streams/client/src/components/streams/StreamShow.js"],"names":["React","flv","connect","fetchStream","StreamShow","Component","constructor","props","videoRef","createRef","componentDidMount","id","match","params","buildPlayer","componentDidUpdate","player","stream","createPlayer","type","url","attachMediaElement","current","load","render","width","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAGA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgBR,KAAK,CAACS,SAAN,EAAhB;AACH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA;AAAD,QAAO,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAA9B;AACA,SAAKN,KAAL,CAAWJ,WAAX,CAAuBQ,EAAvB;AACA,SAAKG,WAAL;AACH;;AACDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKD,WAAL;AACH;;AACDA,EAAAA,WAAW,GAAE;AACT,UAAM;AAACH,MAAAA;AAAD,QAAO,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAA9B;;AACA,QAAG,KAAKG,MAAL,IAAe,CAAC,KAAKT,KAAL,CAAWU,MAA9B,EAAqC;AACjC;AACH;;AACD,SAAKD,MAAL,GAAcf,GAAG,CAACiB,YAAJ,CAAiB;AAC3BC,MAAAA,IAAI,EAAC,KADsB;AAE3BC,MAAAA,GAAG,EAAE,8BAA6BT,EAAG;AAFV,KAAjB,CAAd;AAIA,SAAKK,MAAL,CAAYK,kBAAZ,CAA+B,KAAKb,QAAL,CAAcc,OAA7C;AACA,SAAKN,MAAL,CAAYO,IAAZ;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKjB,KAAL,CAAWU,MAAf,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,GAAG,EAAG,KAAKT,QAAlB;AAA4B,MAAA,KAAK,EAAG;AAACiB,QAAAA,KAAK,EAAC;AAAP,OAApC;AAAoD,MAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKlB,KAAL,CAAWU,MAAX,CAAkBS,KAAvB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKnB,KAAL,CAAWU,MAAX,CAAkBU,WAAvB,CAHJ,CADJ;AAOH;;AApCmC;;AAuCxC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAoB;AACxC,SAAO;AAACb,IAAAA,MAAM,EAACY,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAAClB,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AAAR,GAAP;AACH,CAFD;;AAIA,eAAeT,OAAO,CAAC0B,eAAD,EAAiB;AAACzB,EAAAA;AAAD,CAAjB,CAAP,CAAuCC,UAAvC,CAAf","sourcesContent":["import React from 'react';\nimport flv from 'flv.js';\nimport {connect} from 'react-redux';\nimport {fetchStream} from '../../actions';\n\n\nclass StreamShow extends React.Component{\n    constructor(props){\n        super(props);\n        this.videoRef = React.createRef();\n    }\n    componentDidMount(){\n        const {id} = this.props.match.params;\n        this.props.fetchStream(id);\n        this.buildPlayer();\n    }\n    componentDidUpdate(){\n        this.buildPlayer();\n    }\n    buildPlayer(){\n        const {id} = this.props.match.params;\n        if(this.player || !this.props.stream){\n            return;\n        }\n        this.player = flv.createPlayer({\n            type:'flv',\n            url:`http://localhost:8000/live/${id}`\n        });\n        this.player.attachMediaElement(this.videoRef.current);\n        this.player.load();\n    }\n    render(){\n        if(!this.props.stream){\n            return <div> Loading...</div>\n        }\n        return (\n            <div>\n                <video ref= {this.videoRef} style ={{width:'100%'}} controls/>\n                <h1>{this.props.stream.title}</h1>\n                <h5>{this.props.stream.description}</h5>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,ownProps) => {\n    return {stream:state.streams[ownProps.match.params.id]};\n}\n\nexport default connect(mapStateToProps,{fetchStream})(StreamShow);"]},"metadata":{},"sourceType":"module"}