{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/dashboard/Chart.js\";\nimport React from \"react\";\nimport { ResponsiveContainer } from \"recharts\";\nimport Title from \"./Title\";\nimport Plot from 'react-plotly.js';\nimport { connect } from 'react-redux';\nimport { getStocks } from '../actions';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n    this.props.getStocks(this.props.currentCompany);\n  }\n\n  fetchStock() {\n    // const pointerToThis = this;\n    // console.log(pointerToThis);\n    // const API_KEY = '82N2UO66AVHA2EFY';\n    // let StockSymbol = pointerToThis.props.companies;\n    // let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = []; // fetch(API_Call)\n    //   .then(\n    //     function(response) {\n    //       return response.json();\n    //     }\n    //   )\n    //   .then(\n    //     function(data) {\n    //       console.log(data);\n    //       for (var key in data['Time Series (Daily)']) {\n    //         stockChartXValuesFunction.push(key);\n    //         stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n    //       }\n    //       // console.log(stockChartXValuesFunction);\n    //       pointerToThis.setState({\n    //         stockChartXValues: stockChartXValuesFunction,\n    //         stockChartYValues: stockChartYValuesFunction\n    //       });\n    //     }\n    //   )\n\n    this.props.currentCompany;\n\n    for (var key in this.props.data) {\n      stockChartXValuesFunction.push(key);\n      stockChartYValuesFunction.push(this.props.data['1. open']);\n    }\n\n    this.setState({\n      stockChartXValues: stockChartXValuesFunction,\n      stockChartYValues: stockChartYValuesFunction\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, \"Today\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Plot, {\n      data: [{\n        x: this.state.stockChartXValues,\n        y: this.state.stockChartYValues,\n        type: 'scatter',\n        mode: 'lines+markers',\n        marker: {\n          color: 'red'\n        }\n      }],\n      layout: {\n        width: 850,\n        height: 440,\n        title: 'A Fancy Plot'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    companies: state.stocks.currentCompany,\n    data: state.stocks.companyInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStocks\n})(Chart);","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/dashboard/Chart.js"],"names":["React","ResponsiveContainer","Title","Plot","connect","getStocks","Chart","Component","constructor","props","state","stockChartXValues","stockChartYValues","componentDidMount","fetchStock","currentCompany","stockChartXValuesFunction","stockChartYValuesFunction","key","data","push","setState","render","x","y","type","mode","marker","color","width","height","title","mapStateToProps","companies","stocks","companyInfo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,QAAkC,UAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAGA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,EADR;AAEXC,MAAAA,iBAAiB,EAAE;AAFR,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACA,SAAKL,KAAL,CAAWJ,SAAX,CAAqB,KAAKI,KAAL,CAAWM,cAAhC;AACD;;AAEDD,EAAAA,UAAU,GAAG;AACX;AACA;AACA;AACA;AACA;AACC,QAAIE,yBAAyB,GAAG,EAAhC;AACA,QAAIC,yBAAyB,GAAG,EAAhC,CAPU,CAQX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAKR,KAAL,CAAWM,cAAX;;AACM,SAAK,IAAIG,GAAT,IAAgB,KAAKT,KAAL,CAAWU,IAA3B,EAAgC;AAC9BH,MAAAA,yBAAyB,CAACI,IAA1B,CAA+BF,GAA/B;AACAD,MAAAA,yBAAyB,CAACG,IAA1B,CAA+B,KAAKX,KAAL,CAAWU,IAAX,CAAgB,SAAhB,CAA/B;AACD;;AACD,SAAKE,QAAL,CAAc;AAACV,MAAAA,iBAAiB,EAAEK,yBAApB;AAA8CJ,MAAAA,iBAAiB,EAAEK;AAAjE,KAAd;AACP;;AACDK,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAEA,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,CAAC,EAAE,KAAKb,KAAL,CAAWC,iBADhB;AAEEa,QAAAA,CAAC,EAAE,KAAKd,KAAL,CAAWE,iBAFhB;AAGEa,QAAAA,IAAI,EAAE,SAHR;AAIEC,QAAAA,IAAI,EAAE,eAJR;AAKEC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AALV,OADI,CADV;AAUI,MAAA,MAAM,EAAE;AAACC,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE,GAArB;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFA,CADF;AAmBD;;AAxEiC;;AA0EpC,MAAMC,eAAe,GAAItB,KAAD,IAAW;AACjC,SAAO;AACLuB,IAAAA,SAAS,EAACvB,KAAK,CAACwB,MAAN,CAAanB,cADlB;AAELI,IAAAA,IAAI,EAACT,KAAK,CAACwB,MAAN,CAAaC;AAFb,GAAP;AAID,CALD;;AAMA,eAAe/B,OAAO,CACpB4B,eADoB,EAEpB;AAAE3B,EAAAA;AAAF,CAFoB,CAAP,CAGbC,KAHa,CAAf","sourcesContent":["import React from \"react\";\nimport {ResponsiveContainer} from \"recharts\";\nimport Title from \"./Title\";\nimport Plot from 'react-plotly.js';\nimport { connect } from 'react-redux';\nimport { getStocks } from '../actions';\n\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: []\n    }\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n    this.props.getStocks(this.props.currentCompany);\n  }\n\n  fetchStock() {\n    // const pointerToThis = this;\n    // console.log(pointerToThis);\n    // const API_KEY = '82N2UO66AVHA2EFY';\n    // let StockSymbol = pointerToThis.props.companies;\n    // let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n     let stockChartXValuesFunction = [];\n     let stockChartYValuesFunction = [];\n    // fetch(API_Call)\n    //   .then(\n    //     function(response) {\n    //       return response.json();\n    //     }\n    //   )\n    //   .then(\n    //     function(data) {\n    //       console.log(data);\n\n    //       for (var key in data['Time Series (Daily)']) {\n    //         stockChartXValuesFunction.push(key);\n    //         stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n    //       }\n\n    //       // console.log(stockChartXValuesFunction);\n    //       pointerToThis.setState({\n    //         stockChartXValues: stockChartXValuesFunction,\n    //         stockChartYValues: stockChartYValuesFunction\n    //       });\n    //     }\n    //   )\n\n    this.props.currentCompany\n          for (var key in this.props.data){\n            stockChartXValuesFunction.push(key);\n            stockChartYValuesFunction.push(this.props.data['1. open']);\n          }\n          this.setState({stockChartXValues: stockChartXValuesFunction,stockChartYValues: stockChartYValuesFunction})\n  }\n  render() {\n    return  (\n      <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n      <Plot\n          data={[\n            {\n              x: this.state.stockChartXValues,\n              y: this.state.stockChartYValues,\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: {color: 'red'},\n            }\n          ]}\n          layout={{width: 850, height: 440, title: 'A Fancy Plot'}}\n        />\n      </ResponsiveContainer>\n    </React.Fragment>\n    );\n  };\n}\nconst mapStateToProps = (state) => {\n  return {\n    companies:state.stocks.currentCompany,\n    data:state.stocks.companyInfo\n  };\n};\nexport default connect(\n  mapStateToProps,\n  { getStocks }\n)(Chart);\n"]},"metadata":{},"sourceType":"module"}