{"ast":null,"code":"import streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async dispatch => {\n  const response = streams.post('/streams', formValues);\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id = async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/mitchlew/Documents/Udemy/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,OAAT,EACKC,QADL,EAEKC,aAFL,EAGKC,aAHL,EAIKC,YAJL,EAKKC,aALL,EAMKC,WANL,QAOK,SAPL;AASA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AAC1D,QAAMC,QAAQ,GAAGhB,OAAO,CAACiB,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAjB;AACAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAACP,aAAN;AAAoBQ,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AAChD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACoB,GAAR,CAAY,UAAZ,CAAvB;AACAL,EAAAA,QAAQ,CAAE;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAACK,QAAQ,CAACE;AAAxC,GAAF,CAAR;AACH,CAHM;AAKP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAMP,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACoB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AACAP,EAAAA,QAAQ,CAAE;AAACL,IAAAA,IAAI,EAACL,YAAN;AAAoBM,IAAAA,OAAO,EAACK,QAAQ,CAACE;AAArC,GAAF,CAAR;AACH,CAHM;AAKP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKR,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACwB,GAAR,CAAa,WAAUF,EAAG,EAA1B,EAA4BR,UAA5B,CAAvB;AACAC,EAAAA,QAAQ,CAAE;AAACL,IAAAA,IAAI,EAACH,WAAN;AAAmBI,IAAAA,OAAO,EAACK,QAAQ,CAACE;AAApC,GAAF,CAAR;AACH,CAHM;AAKP,OAAO,MAAMO,YAAY,GAAIH,EAAD,GAAO,MAAMP,QAAN,IAAkB;AACjD,QAAMf,OAAO,CAAC0B,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AACAP,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAACJ,aAAN;AAAoBK,IAAAA,OAAO,EAACW;AAA5B,GAAD,CAAR;AACH,CAHM","sourcesContent":["import streams from '../apis/streams';\nimport { SIGN_IN,\n     SIGN_OUT, \n     CREATE_STREAM, \n     FETCH_STREAMS,\n     FETCH_STREAM, \n     DELETE_STREAM,\n     EDIT_STREAM }\nfrom './types';\n\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\n\nexport const createStream = formValues => async dispatch => {\n  const response = streams.post('/streams', formValues);\n  dispatch({type:CREATE_STREAM,payload: response.data});\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams');\n    dispatch ({ type: FETCH_STREAMS, payload:response.data});\n}\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch ({type:FETCH_STREAM, payload:response.data});\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.put(`streams/${id}`,formValues);\n    dispatch ({type:EDIT_STREAM, payload:response.data});\n} \n\nexport const deleteStream = (id) = async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({type:DELETE_STREAM,payload:id})\n}"]},"metadata":{},"sourceType":"module"}