{"ast":null,"code":"import _classCallCheck from\"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import _ from'lodash';import React from'react';import{connect}from'react-redux';import{fetchStream,editStream}from'../../actions';import StreamForm from'./StreamForm';var StreamEdit=/*#__PURE__*/function(_React$Component){_inherits(StreamEdit,_React$Component);var _super=_createSuper(StreamEdit);function StreamEdit(){var _this;_classCallCheck(this,StreamEdit);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onSubmit=function(formValues){_this.props.editStream(_this.props.match.params.id,formValues);};return _this;}_createClass(StreamEdit,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchStream(this.props.match.params.id);}},{key:\"render\",value:function render(){if(!this.props.stream){return/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\");}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Edit a Stream\"),/*#__PURE__*/React.createElement(StreamForm,{initialValues:_.pick(this.props.stream,'title','description'),onSubmit:this.onSubmit}));}}]);return StreamEdit;}(React.Component);var mapStateToProps=function mapStateToProps(state,ownProps){return{stream:state.streams[ownProps.match.params.id]};};export default connect(mapStateToProps,{fetchStream:fetchStream,editStream:editStream})(StreamEdit);","map":{"version":3,"sources":["/Users/mitchlew/Documents/Streaming/streams/client/src/components/streams/StreamEdit.js"],"names":["_","React","connect","fetchStream","editStream","StreamForm","StreamEdit","onSubmit","formValues","props","match","params","id","stream","pick","Component","mapStateToProps","state","ownProps","streams"],"mappings":"ogBAAA,MAAOA,CAAAA,CAAP,KAAc,QAAd,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,WAAT,CAAsBC,UAAtB,KAAwC,eAAxC,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,GAEMC,CAAAA,U,uVAKJC,Q,CAAW,SAAAC,UAAU,CAAI,CACvB,MAAKC,KAAL,CAAWL,UAAX,CAAsB,MAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,CAAkDJ,UAAlD,EACD,C,mGANmB,CAClB,KAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C,EACD,C,uCAMQ,CACP,GAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,CAAwB,CACtB,mBAAO,4CAAP,CACD,CAED,mBACE,4CACE,8CADF,cAEE,oBAAC,UAAD,EACE,aAAa,CAAEb,CAAC,CAACc,IAAF,CAAO,KAAKL,KAAL,CAAWI,MAAlB,CAA0B,OAA1B,CAAmC,aAAnC,CADjB,CAEE,QAAQ,CAAE,KAAKN,QAFjB,EAFF,CADF,CASD,C,wBAvBsBN,KAAK,CAACc,S,EA0B/B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,MAAO,CAAEL,MAAM,CAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC,CAAV,CAAP,CACD,CAFD,CAIA,cAAeV,CAAAA,OAAO,CACpBc,eADoB,CAEpB,CAAEb,WAAW,CAAXA,WAAF,CAAeC,UAAU,CAAVA,UAAf,CAFoB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  onSubmit = formValues => {\n    this.props.editStream(this.props.match.params.id, formValues);\n  };\n\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading...</div>;\n    }\n\n    return ( \n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm\n          initialValues={_.pick(this.props.stream, 'title', 'description')}\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStream, editStream }\n)(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}