{"ast":null,"code":"import streams from \"../apis/streams\"; // eslint-disable-next-line\n\nimport stock from \"../apis/stock\";\nimport history from \"../history\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM, CREATE_PERSON, EDIT_HOLDING, CURRENT_PERSON } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createPerson = object => async (dispatch, getState) => {\n  const response = await streams.post(\"/api/persons\", { ...object\n  });\n  console.log(response);\n  dispatch({\n    type: CREATE_PERSON,\n    payload: response.data\n  });\n};\nexport const currentPerson = userid => {\n  return {\n    type: CURRENT_PERSON,\n    payload: userid\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post(\"/api/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/api/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/api/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/api/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/api/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n  history.push(\"/\");\n};","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/actions/index.js"],"names":["streams","stock","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","CREATE_PERSON","EDIT_HOLDING","CURRENT_PERSON","signIn","userId","type","payload","signOut","createPerson","object","dispatch","getState","response","post","console","log","data","currentPerson","userid","createStream","formValues","auth","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"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","sourcesContent":["import streams from \"../apis/streams\";\n// eslint-disable-next-line\nimport stock from \"../apis/stock\";\nimport history from \"../history\";\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM,\n  CREATE_PERSON,\n  EDIT_HOLDING,\n  CURRENT_PERSON\n} from \"./types\";\n\n\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId,\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\nexport const createPerson = (object) => async(dispatch,getState)=>{\n  const response = await streams.post(\"/api/persons\",{...object})\n  console.log(response);\n  dispatch({type:CREATE_PERSON, payload:response.data})\n}\nexport const currentPerson = (userid) => {\n  return {\n    type:CURRENT_PERSON,\n    payload:userid\n  }\n}\nexport const createStream = (formValues) => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post(\"/api/streams\", {\n    ...formValues,\n    userId,\n  });\n\n  dispatch({ type: CREATE_STREAM, payload: response.data });\n  history.push(\"/\");\n};\n\nexport const fetchStreams = () => async (dispatch) => {\n  const response = await streams.get(\"/api/streams\");\n\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async (dispatch) => {\n  const response = await streams.get(`/api/streams/${id}`);\n\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async (dispatch) => {\n  const response = await streams.patch(`/api/streams/${id}`, formValues);\n\n  dispatch({ type: EDIT_STREAM, payload: response.data });\n  history.push(\"/\");\n};\n\nexport const deleteStream = (id) => async (dispatch) => {\n  await streams.delete(`/api/streams/${id}`);\n\n  dispatch({ type: DELETE_STREAM, payload: id });\n  history.push(\"/\");\n};\n"]},"metadata":{},"sourceType":"module"}