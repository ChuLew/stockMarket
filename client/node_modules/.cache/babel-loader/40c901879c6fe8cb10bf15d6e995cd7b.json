{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/components/pictures/ImageList.js\";\nimport React from \"react\";\nimport ImageCard from \"./ImageCard\";\nimport { connect } from \"react-redux\";\nimport \"./ImageList.css\";\n\nconst ImageList = props => {\n  const images = props.images.map(image => {\n    return /*#__PURE__*/React.createElement(ImageCard, {\n      key: image.id,\n      image: image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 12\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-list \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  }, images);\n};\n\nconst mapStateToProps = state => {\n  return {\n    images: state.pictures.images\n  };\n};\n\nexport default connect(mapStateToProps)(ImageList);","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/components/pictures/ImageList.js"],"names":["React","ImageCard","connect","ImageList","props","images","map","image","id","mapStateToProps","state","pictures"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,iBAAP;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IAAW;AACzC,wBAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAtB;AAA2B,MAAA,KAAK,EAAID,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFc,CAAf;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,MAA9B,CAAP;AACD,CALD;;AAMA,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAACL,IAAAA,MAAM,EAACK,KAAK,CAACC,QAAN,CAAeN;AAAvB,GAAP;AACH,CAFD;;AAIA,eAAeH,OAAO,CAACO,eAAD,CAAP,CAAyBN,SAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport ImageCard from \"./ImageCard\";\nimport {connect} from \"react-redux\";\nimport \"./ImageList.css\";\nconst ImageList = (props) => {\n  const images = props.images.map((image) => {\n    return <ImageCard key={image.id}  image = {image}/>;\n  });\n  return <div className=\"image-list \">{images}</div>;\n};\nconst mapStateToProps = (state) => {\n    return {images:state.pictures.images};\n}\n\nexport default connect(mapStateToProps)(ImageList);\n"]},"metadata":{},"sourceType":"module"}