{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/components/streams/StockForm.js\";\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction createData(symbol, datePurchased, purchasePrice, qty) {\n  return {\n    symbol,\n    datePurchased,\n    purchasePrice,\n    qty\n  };\n}\n\nclass StockForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      symbol: \"\",\n      quantity: \"\",\n      buyDateString: \"2020-09-17\",\n      price: 0\n    };\n\n    this.change = e => {\n      //recieves on change as props \n      this.props.onChange({\n        [e.target.name]: e.target.value\n      });\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(e.target.name);\n    };\n\n    this.onSubmit = e => {\n      const API_KEY = 'HGJWFG4N8AQ66ICD';\n      let StockSymbol = this.state.symbol.toUpperCase();\n      let date = this.state.buyDateString;\n      console.log(StockSymbol);\n      console.log(\"KLSDJF:LSDKFJ:SLDKJK\");\n      let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n      fetch(API_Call).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n\n        if ('Note' in data) {\n          alert(data.Note);\n        } else if ('Error Message' in data) {\n          alert(\"No Ticker exists for your input String Please input valid Ticker Symbol\");\n        } else {\n          var printout = data['Time Series (Daily)'][date]['4. close'];\n          console.log(printout);\n        }\n      });\n      console.log(this); //very important to remember this will be what i pass into reducer\n      //******************** */\n\n      e.preventDefault();\n      this.setState({\n        symbol: \"\",\n        quantity: \"\"\n      });\n      this.props.onChange({\n        symbol: \"\",\n        quantity: \"\"\n      });\n    };\n\n    this.handleChange = date => {\n      var tempMonth = \"\";\n\n      if (date.getMonth() + 1 < 10) {\n        tempMonth = \"0\" + (date.getMonth() + 1).toString();\n      } else {\n        tempMonth = (date.getMonth() + 1).toString();\n      }\n\n      var stringDate = `${date.getFullYear().toString()}-${tempMonth}-${date.getDate().toString()}`;\n      console.log(tempMonth);\n      this.setState({\n        buyDate: date,\n        buyDateString: stringDate\n      });\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"What day did you buy stock?\"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.buyDate,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"symbol\",\n      placeholder: \"Ticker Symbol\",\n      value: this.state.symbol,\n      onChange: e => this.change(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"quantity\",\n      type: \"number\",\n      min: \"0\",\n      placeholder: \"Quantity\",\n      value: this.state.quantity,\n      onChange: e => this.change(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.onSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default StockForm; //no current company","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/components/streams/StockForm.js"],"names":["React","DatePicker","createData","symbol","datePurchased","purchasePrice","qty","StockForm","Component","constructor","props","state","quantity","buyDateString","price","change","e","onChange","target","name","value","setState","console","log","onSubmit","API_KEY","StockSymbol","toUpperCase","date","API_Call","fetch","then","response","json","data","alert","Note","printout","preventDefault","handleChange","tempMonth","getMonth","toString","stringDate","getFullYear","getDate","buyDate","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;AAEA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,GAA1D,EAAiE;AAC/D,SAAO;AAAEH,IAAAA,MAAF;AAAUC,IAAAA,aAAV;AAAyBC,IAAAA,aAAzB;AAAwCC,IAAAA;AAAxC,GAAP;AACD;;AACA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AAOxCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SANjBC,KAMiB,GANT;AACNR,MAAAA,MAAM,EAAE,EADF;AAENS,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,aAAa,EAAC,YAHR;AAINC,MAAAA,KAAK,EAAC;AAJA,KAMS;;AAAA,SAIjBC,MAJiB,GAIRC,CAAC,IAAI;AACZ;AACA,WAAKN,KAAL,CAAWO,QAAX,CAAoB;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAApB;AACA,WAAKC,QAAL,CAAc;AACZ,SAACL,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACE,MAAF,CAASC,IAArB;AACD,KAXgB;;AAAA,SAkBjBK,QAlBiB,GAkBLR,CAAD,IAAO;AAChB,YAAMS,OAAO,GAAG,kBAAhB;AACA,UAAIC,WAAW,GAAG,KAAKf,KAAL,CAAWR,MAAX,CAAkBwB,WAAlB,EAAlB;AACA,UAAIC,IAAI,GAAG,KAAKjB,KAAL,CAAWE,aAAtB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAIM,QAAQ,GAAI,gFAA+EH,WAAY,8BAA6BD,OAAQ,EAAhJ;AACAK,MAAAA,KAAK,CAACD,QAAD,CAAL,CACGE,IADH,CAEI,UAASC,QAAT,EAAmB;AACjB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAJL,EAMGF,IANH,CAOI,UAASG,IAAT,EAAe;AACbZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;;AAEA,YAAI,UAAUA,IAAd,EAAmB;AAChBC,UAAAA,KAAK,CAACD,IAAI,CAACE,IAAN,CAAL;AACF,SAFD,MAGK,IAAI,mBAAmBF,IAAvB,EAA4B;AAC/BC,UAAAA,KAAK,CAAC,yEAAD,CAAL;AACD,SAFI,MAEA;AACF,cAAIE,QAAQ,GAAGH,IAAI,CAAC,qBAAD,CAAJ,CAA4BN,IAA5B,EAAkC,UAAlC,CAAf;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACF;AACF,OAnBL;AAoBIf,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EA3BY,CA4BpB;AAEI;;AACAP,MAAAA,CAAC,CAACsB,cAAF;AACA,WAAKjB,QAAL,CAAc;AACZlB,QAAAA,MAAM,EAAE,EADI;AAEZS,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAKA,WAAKF,KAAL,CAAWO,QAAX,CAAoB;AAClBd,QAAAA,MAAM,EAAE,EADU;AAElBS,QAAAA,QAAQ,EAAE;AAFQ,OAApB;AAID,KA3DgB;;AAAA,SA4DjB2B,YA5DiB,GA4DFX,IAAI,IAAI;AACrB,UAAIY,SAAS,GAAG,EAAhB;;AACA,UAAKZ,IAAI,CAACa,QAAL,KAAgB,CAAjB,GAAsB,EAA1B,EAA6B;AAC3BD,QAAAA,SAAS,GAAG,MAAI,CAACZ,IAAI,CAACa,QAAL,KAAgB,CAAjB,EAAoBC,QAApB,EAAhB;AACD,OAFD,MAEK;AACHF,QAAAA,SAAS,GAAG,CAACZ,IAAI,CAACa,QAAL,KAAgB,CAAjB,EAAoBC,QAApB,EAAZ;AACD;;AACD,UAAIC,UAAU,GAAI,GAAEf,IAAI,CAACgB,WAAL,GAAmBF,QAAnB,EAA8B,IAAGF,SAAU,IAAGZ,IAAI,CAACiB,OAAL,GAAeH,QAAf,EAA0B,EAA5F;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,SAAZ;AACA,WAAKnB,QAAL,CAAc;AACZyB,QAAAA,OAAO,EAAElB,IADG;AAEZf,QAAAA,aAAa,EAAC8B;AAFF,OAAd;AAID,KAzEgB;;AAEhB,SAAKnB,QAAL,GAAgB,KAAKA,QAAL,CAAcuB,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAwEAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKrC,KAAL,CAAWmC,OAAjC;AAA0C,MAAA,QAAQ,EAAE,KAAKP,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWR,MAHpB;AAIE,MAAA,QAAQ,EAAEa,CAAC,IAAI,KAAKD,MAAL,CAAYC,CAAZ,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,GAAG,EAAC,GAHN;AAIE,MAAA,WAAW,EAAC,UAJd;AAKE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,QALpB;AAME,MAAA,QAAQ,EAAEI,CAAC,IAAI,KAAKD,MAAL,CAAYC,CAAZ,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,eAmBE;AAAQ,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAKQ,QAAL,CAAcR,CAAd,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,CADF;AAuBD;;AA1GsC;;AA4GzC,eAAeT,SAAf,C,CAA0B","sourcesContent":["import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction createData(symbol, datePurchased, purchasePrice, qty, ) {\n  return { symbol, datePurchased, purchasePrice, qty };\n}\n class StockForm extends React.Component {\n  state = {\n    symbol: \"\",\n    quantity: \"\",\n    buyDateString:\"2020-09-17\",\n    price:0,\n  };\n constructor(props){\n   super(props);\n   this.onSubmit = this.onSubmit.bind(this);\n }\n  change = e => {\n    //recieves on change as props \n    this.props.onChange({ [e.target.name]: e.target.value });\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(e.target.name);\n  };\n// resets data but i want additional functionality \n// here i want to take state data and put it into object\n//pass that object into action creator and dispatch it to database\n//then i want to pull the data from database and dispaly it on Orders\n//refer to action creator of steram create it creates and objects and posts it to the api \n\n  onSubmit = (e) => {\n    const API_KEY = 'HGJWFG4N8AQ66ICD';\n    let StockSymbol = this.state.symbol.toUpperCase();\n    let date = this.state.buyDateString;\n    console.log(StockSymbol);\n    console.log(\"KLSDJF:LSDKFJ:SLDKJK\")\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    fetch(API_Call)\n      .then(\n        function(response) {\n          return response.json();\n        }\n      )\n      .then(\n        function(data) {\n          console.log(data);\n\n          if ('Note' in data){\n             alert(data.Note);\n          }\n          else if ('Error Message' in data){\n            alert(\"No Ticker exists for your input String Please input valid Ticker Symbol\");\n          }else{\n             var printout = data['Time Series (Daily)'][date]['4. close'];\n             console.log(printout);\n          }\n        });\n        console.log(this);\n//very important to remember this will be what i pass into reducer\n\n    //******************** */\n    e.preventDefault();\n    this.setState({\n      symbol: \"\",\n      quantity: \"\",\n\n    });\n    this.props.onChange({\n      symbol: \"\",\n      quantity: \"\",\n    });\n  };\n  handleChange = date => {  \n    var tempMonth = \"\";\n    if ((date.getMonth()+1) < 10){\n      tempMonth = \"0\"+(date.getMonth()+1).toString();\n    }else{\n      tempMonth = (date.getMonth()+1).toString()\n    }\n    var stringDate = `${date.getFullYear().toString()}-${tempMonth}-${date.getDate().toString()}`;\n    console.log(tempMonth);\n    this.setState({\n      buyDate: date,\n      buyDateString:stringDate\n    });\n  };\n\n  render() {\n    return (\n      <form>\n        <label>What day did you buy stock?</label>\n        <DatePicker selected={this.state.buyDate} onChange={this.handleChange}/>\n        <input\n          name=\"symbol\"\n          placeholder=\"Ticker Symbol\"\n          value={this.state.symbol}\n          onChange={e => this.change(e)}\n        />\n        <br />\n        <input\n          name=\"quantity\"\n          type=\"number\"\n          min=\"0\"\n          placeholder=\"Quantity\"\n          value={this.state.quantity}\n          onChange={e => this.change(e)}\n        />\n        <br />\n        <button onClick={e => this.onSubmit(e)}>Submit</button>\n      </form>\n    );\n  }\n}\nexport default StockForm; //no current company"]},"metadata":{},"sourceType":"module"}