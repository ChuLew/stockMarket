{"ast":null,"code":"import _classCallCheck from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Field,reduxForm}from'redux-form';// import {Table,Container,Input,Button,Label,Form,FormGroup} from 'reactstrap';\nvar StreamForm=/*#__PURE__*/function(_React$Component){_inherits(StreamForm,_React$Component);var _super=_createSuper(StreamForm);function StreamForm(){var _this;_classCallCheck(this,StreamForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderInput=function(_ref){var input=_ref.input,label=_ref.label,meta=_ref.meta;var className=\"field \".concat(meta.error&&meta.touched?'error':'');return/*#__PURE__*/React.createElement(\"div\",{className:className},/*#__PURE__*/React.createElement(\"label\",null,label),/*#__PURE__*/React.createElement(\"input\",Object.assign({},input,{autoComplete:\"off\"})),_this.renderError(meta));};_this.onSubmit=function(formValues){_this.props.onSubmit(formValues);};return _this;}_createClass(StreamForm,[{key:\"renderError\",value:function renderError(_ref2){var error=_ref2.error,touched=_ref2.touched;if(touched&&error){return/*#__PURE__*/React.createElement(\"div\",{className:\"ui error message\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},error));}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.props.handleSubmit(this.onSubmit),className:\"ui form error\"},/*#__PURE__*/React.createElement(Field,{name:\"title\",component:this.renderInput,label:\"Enter Title\"}),/*#__PURE__*/React.createElement(Field,{name:\"description\",component:this.renderInput,label:\"Enter Description\"}),/*#__PURE__*/React.createElement(\"button\",{className:\"ui button primary\"},\"Submit\"));}}]);return StreamForm;}(React.Component);var validate=function validate(formValues){var errors={};if(!formValues.title){errors.title='You must enter a title';}if(!formValues.description){errors.description='You must enter a description';}return errors;};export default reduxForm({form:'streamForm',validate:validate})(StreamForm);","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/components/streams/StreamForm.js"],"names":["React","Field","reduxForm","StreamForm","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","props","handleSubmit","Component","validate","errors","title","description","form"],"mappings":"ooBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA;GACMC,CAAAA,U,uVAWJC,W,CAAc,cAA4B,IAAzBC,CAAAA,KAAyB,MAAzBA,KAAyB,CAAlBC,KAAkB,MAAlBA,KAAkB,CAAXC,IAAW,MAAXA,IAAW,CACxC,GAAMC,CAAAA,SAAS,iBAAYD,IAAI,CAACE,KAAL,EAAcF,IAAI,CAACG,OAAnB,CAA6B,OAA7B,CAAuC,EAAnD,CAAf,CACA,mBACE,2BAAK,SAAS,CAAEF,SAAhB,eACE,iCAAQF,KAAR,CADF,cAEE,6CAAWD,KAAX,EAAkB,YAAY,CAAC,KAA/B,GAFF,CAGG,MAAKM,WAAL,CAAiBJ,IAAjB,CAHH,CADF,CAOD,C,OAEDK,Q,CAAW,SAAAC,UAAU,CAAI,CACvB,MAAKC,KAAL,CAAWF,QAAX,CAAoBC,UAApB,EACD,C,4FAvB+B,IAAlBJ,CAAAA,KAAkB,OAAlBA,KAAkB,CAAXC,OAAW,OAAXA,OAAW,CAC9B,GAAIA,OAAO,EAAID,KAAf,CAAsB,CACpB,mBACE,2BAAK,SAAS,CAAC,kBAAf,eACE,2BAAK,SAAS,CAAC,QAAf,EAAyBA,KAAzB,CADF,CADF,CAKD,CACF,C,uCAiBQ,CACP,mBACE,4BACE,QAAQ,CAAE,KAAKK,KAAL,CAAWC,YAAX,CAAwB,KAAKH,QAA7B,CADZ,CAEE,SAAS,CAAC,eAFZ,eAIE,oBAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,SAAS,CAAE,KAAKR,WAApC,CAAiD,KAAK,CAAC,aAAvD,EAJF,cAKE,oBAAC,KAAD,EACE,IAAI,CAAC,aADP,CAEE,SAAS,CAAE,KAAKA,WAFlB,CAGE,KAAK,CAAC,mBAHR,EALF,cAUE,8BAAQ,SAAS,CAAC,mBAAlB,WAVF,CADF,CAcD,C,wBAzCsBJ,KAAK,CAACgB,S,EA4C/B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAJ,UAAU,CAAI,CAC7B,GAAMK,CAAAA,MAAM,CAAG,EAAf,CAEA,GAAI,CAACL,UAAU,CAACM,KAAhB,CAAuB,CACrBD,MAAM,CAACC,KAAP,CAAe,wBAAf,CACD,CAED,GAAI,CAACN,UAAU,CAACO,WAAhB,CAA6B,CAC3BF,MAAM,CAACE,WAAP,CAAqB,8BAArB,CACD,CAED,MAAOF,CAAAA,MAAP,CACD,CAZD,CAcA,cAAehB,CAAAA,SAAS,CAAC,CACvBmB,IAAI,CAAE,YADiB,CAEvBJ,QAAQ,CAARA,QAFuB,CAAD,CAAT,CAGZd,UAHY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n// import {Table,Container,Input,Button,Label,Form,FormGroup} from 'reactstrap';\nclass StreamForm extends React.Component {\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\" />\n        {this.renderError(meta)}\n      </div>\n    );\n  };\n\n  onSubmit = formValues => {\n    this.props.onSubmit(formValues);\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        className=\"ui form error\"\n      >\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field\n          name=\"description\"\n          component={this.renderInput}\n          label=\"Enter Description\"\n        />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamForm',\n  validate\n})(StreamForm);\n"]},"metadata":{},"sourceType":"module"}