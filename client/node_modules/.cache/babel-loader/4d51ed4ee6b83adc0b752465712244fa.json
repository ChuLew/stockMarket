{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/client/src/components/pictures/ImageCard.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\"; // import Modal from '../Modal';\n// import history from '../../history';\n\nimport { connect } from \"react-redux\";\nimport { selectPicture } from \"../../actions\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSpans = () => {\n      var height = 10;\n\n      if (this.imageRef.current.clientHeight !== null) {\n        height = this.imageRef.current.clientHeight;\n      }\n\n      const spans = Math.ceil(height / 10);\n      this.setState({\n        spans: spans\n      });\n    };\n\n    this.onClickAddPic = () => {\n      this.props.selectPicture(this.props.image);\n    };\n\n    this.state = {\n      spans: 0\n    };\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  render() {\n    const {\n      description\n    } = this.props.image;\n    var urls;\n\n    if (!this.props.saved) {\n      urls = this.props.image.urls.regular;\n    } else {\n      urls = this.props.image.url;\n    }\n\n    if (!this.props.saved) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          gridRowEnd: `span ${this.state.spans}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/streams/add/${this.props.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        ref: this.imageRef,\n        alt: description,\n        src: urls,\n        onClick: this.onClickAddPic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }\n      }))); // eslint-disable-next-line \n    } else if (this.props.saved == 2) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          gridRowEnd: `span ${this.state.spans}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/streams/deletePic/${this.props.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        ref: this.imageRef,\n        alt: description,\n        src: urls,\n        onClick: this.onClickAddPic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          gridRowEnd: `span ${this.state.spans}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        ref: this.imageRef,\n        alt: description,\n        src: urls,\n        onClick: this.onClickAddPic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedImage: state.pictures.selectedPicture\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectPicture\n})(ImageCard);","map":{"version":3,"sources":["/Users/mitchlew/Documents/client/src/components/pictures/ImageCard.js"],"names":["React","Link","connect","selectPicture","ImageCard","Component","constructor","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","onClickAddPic","image","state","createRef","componentDidMount","addEventListener","render","description","urls","saved","regular","url","gridRowEnd","id","mapStateToProps","selectedImage","pictures","selectedPicture"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import Modal from '../Modal';\n// import history from '../../history';\nimport { connect } from \"react-redux\";\nimport { selectPicture } from \"../../actions\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { spans: 0 };\n    this.imageRef = React.createRef();\n  }\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  setSpans = () => {\n    var height = 10;\n    if(this.imageRef.current.clientHeight!==null){\n     height = this.imageRef.current.clientHeight; \n    }\n    \n    const spans = Math.ceil(height / 10);\n    this.setState({ spans: spans });\n  };\n\n  onClickAddPic = () => {\n    this.props.selectPicture(this.props.image);\n  };\n  render() {\n    const { description } = this.props.image;\n    var urls;\n    if (!this.props.saved) {\n      urls = this.props.image.urls.regular;\n    } else {\n      urls = this.props.image.url;\n    }\n    if (!this.props.saved) {\n      return (\n        <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n          <Link to={`/streams/add/${this.props.id}`}>\n             <img\n              ref={this.imageRef}\n              alt={description}\n              src={urls}\n              onClick={this.onClickAddPic}\n            />\n          </Link>\n        </div>\n      );\n      // eslint-disable-next-line \n    }else if (this.props.saved == 2){\n      return (\n         <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n          <Link to={`/streams/deletePic/${this.props.id}`}> \n          {/* link to delete page */}\n             <img\n              ref={this.imageRef}\n              alt={description}\n              src={urls}\n              onClick={this.onClickAddPic}\n            />\n          </Link>\n        </div>\n      )\n     \n    }\n\n    else{\n      return (\n        <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n             <img\n              ref={this.imageRef}\n              alt={description}\n              src={urls} \n              onClick={this.onClickAddPic}\n            />\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { selectedImage: state.pictures.selectedPicture };\n};\nexport default connect(mapStateToProps, { selectPicture })(ImageCard);\n"]},"metadata":{},"sourceType":"module"}