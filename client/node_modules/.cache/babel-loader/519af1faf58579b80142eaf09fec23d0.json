{"ast":null,"code":"import streams from '../apis/streams';\nimport history from '../history';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM, CHANGE_TERM, FETCH_PICTURES } from './types';\nexport const changeTerm = term => {\n  return {\n    type: CHANGE_TERM,\n    payload: term\n  };\n};\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post('/api/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/api/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/api/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/api/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/api/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n  history.push('/');\n};","map":{"version":3,"sources":["/Users/mitchlew/Documents/client/src/actions/index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","CHANGE_TERM","FETCH_PICTURES","changeTerm","term","type","payload","signIn","userId","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,WAPF,EAQEC,WARF,EASEC,cATF,QAUO,SAVP;AAWA,OAAO,MAAMC,UAAU,GAAGC,IAAI,IAAI;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WADD;AAELK,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMG,MAAM,GAAGC,MAAM,IAAI;AAC9B,SAAO;AACLH,IAAAA,IAAI,EAAEX,OADD;AAELY,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLJ,IAAAA,IAAI,EAAEV;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMe,YAAY,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,QAAM;AAAEL,IAAAA;AAAF,MAAaK,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMvB,OAAO,CAACwB,IAAR,CAAa,cAAb,EAA6B,EAAE,GAAGL,UAAL;AAAiBH,IAAAA;AAAjB,GAA7B,CAAvB;AAEAI,EAAAA,QAAQ,CAAC;AAAEP,IAAAA,IAAI,EAAET,aAAR;AAAuBU,IAAAA,OAAO,EAAES,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACAxB,EAAAA,OAAO,CAACyB,IAAR,CAAa,GAAb;AACD,CANM;AAQP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMP,QAAN,IAAkB;AAClD,QAAMG,QAAQ,GAAG,MAAMvB,OAAO,CAAC4B,GAAR,CAAY,cAAZ,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEP,IAAAA,IAAI,EAAER,aAAR;AAAuBS,IAAAA,OAAO,EAAES,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMI,WAAW,GAAGC,EAAE,IAAI,MAAMV,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMvB,OAAO,CAAC4B,GAAR,CAAa,gBAAeE,EAAG,EAA/B,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAAEP,IAAAA,IAAI,EAAEP,YAAR;AAAsBQ,IAAAA,OAAO,EAAES,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC9D,QAAMG,QAAQ,GAAG,MAAMvB,OAAO,CAACgC,KAAR,CAAe,gBAAeF,EAAG,EAAjC,EAAoCX,UAApC,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEP,IAAAA,IAAI,EAAEL,WAAR;AAAqBM,IAAAA,OAAO,EAAES,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACAxB,EAAAA,OAAO,CAACyB,IAAR,CAAa,GAAb;AACD,CALM;AAOP,OAAO,MAAMO,YAAY,GAAGH,EAAE,IAAI,MAAMV,QAAN,IAAkB;AAClD,QAAMpB,OAAO,CAACkC,MAAR,CAAgB,gBAAeJ,EAAG,EAAlC,CAAN;AAEAV,EAAAA,QAAQ,CAAC;AAAEP,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAEgB;AAAhC,GAAD,CAAR;AACA7B,EAAAA,OAAO,CAACyB,IAAR,CAAa,GAAb;AACD,CALM","sourcesContent":["import streams from '../apis/streams';\nimport history from '../history';\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM,\n  CHANGE_TERM,\n  FETCH_PICTURES\n} from './types';\nexport const changeTerm = term => {\n  return {\n    type: CHANGE_TERM,\n    payload: term\n  };\n}\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post('/api/streams', { ...formValues, userId });\n\n  dispatch({ type: CREATE_STREAM, payload: response.data });\n  history.push('/');\n};\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/api/streams');\n\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/api/streams/${id}`);\n\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/api/streams/${id}`, formValues);\n\n  dispatch({ type: EDIT_STREAM, payload: response.data });\n  history.push('/');\n};\n\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/api/streams/${id}`);\n\n  dispatch({ type: DELETE_STREAM, payload: id });\n  history.push('/')\n};\n"]},"metadata":{},"sourceType":"module"}