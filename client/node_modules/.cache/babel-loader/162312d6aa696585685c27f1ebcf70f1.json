{"ast":null,"code":"import _classCallCheck from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _get from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Log from '../utils/logger.js';\nimport { BaseLoader, LoaderStatus, LoaderErrors } from './loader.js';\nimport { RuntimeException } from '../utils/exception.js'; // For FLV over WebSocket live stream\n\nvar WebSocketLoader = /*#__PURE__*/function (_BaseLoader) {\n  _inherits(WebSocketLoader, _BaseLoader);\n\n  var _super = _createSuper(WebSocketLoader);\n\n  _createClass(WebSocketLoader, null, [{\n    key: \"isSupported\",\n    value: function isSupported() {\n      try {\n        return typeof self.WebSocket !== 'undefined';\n      } catch (e) {\n        return false;\n      }\n    }\n  }]);\n\n  function WebSocketLoader() {\n    var _this;\n\n    _classCallCheck(this, WebSocketLoader);\n\n    _this = _super.call(this, 'websocket-loader');\n    _this.TAG = 'WebSocketLoader';\n    _this._needStash = true;\n    _this._ws = null;\n    _this._requestAbort = false;\n    _this._receivedLength = 0;\n    return _this;\n  }\n\n  _createClass(WebSocketLoader, [{\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._ws) {\n        this.abort();\n      }\n\n      _get(_getPrototypeOf(WebSocketLoader.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"open\",\n    value: function open(dataSource) {\n      try {\n        var ws = this._ws = new self.WebSocket(dataSource.url);\n        ws.binaryType = 'arraybuffer';\n        ws.onopen = this._onWebSocketOpen.bind(this);\n        ws.onclose = this._onWebSocketClose.bind(this);\n        ws.onmessage = this._onWebSocketMessage.bind(this);\n        ws.onerror = this._onWebSocketError.bind(this);\n        this._status = LoaderStatus.kConnecting;\n      } catch (e) {\n        this._status = LoaderStatus.kError;\n        var info = {\n          code: e.code,\n          msg: e.message\n        };\n\n        if (this._onError) {\n          this._onError(LoaderErrors.EXCEPTION, info);\n        } else {\n          throw new RuntimeException(info.msg);\n        }\n      }\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      var ws = this._ws;\n\n      if (ws && (ws.readyState === 0 || ws.readyState === 1)) {\n        // CONNECTING || OPEN\n        this._requestAbort = true;\n        ws.close();\n      }\n\n      this._ws = null;\n      this._status = LoaderStatus.kComplete;\n    }\n  }, {\n    key: \"_onWebSocketOpen\",\n    value: function _onWebSocketOpen(e) {\n      this._status = LoaderStatus.kBuffering;\n    }\n  }, {\n    key: \"_onWebSocketClose\",\n    value: function _onWebSocketClose(e) {\n      if (this._requestAbort === true) {\n        this._requestAbort = false;\n        return;\n      }\n\n      this._status = LoaderStatus.kComplete;\n\n      if (this._onComplete) {\n        this._onComplete(0, this._receivedLength - 1);\n      }\n    }\n  }, {\n    key: \"_onWebSocketMessage\",\n    value: function _onWebSocketMessage(e) {\n      var _this2 = this;\n\n      if (e.data instanceof ArrayBuffer) {\n        this._dispatchArrayBuffer(e.data);\n      } else if (e.data instanceof Blob) {\n        var reader = new FileReader();\n\n        reader.onload = function () {\n          _this2._dispatchArrayBuffer(reader.result);\n        };\n\n        reader.readAsArrayBuffer(e.data);\n      } else {\n        this._status = LoaderStatus.kError;\n        var info = {\n          code: -1,\n          msg: 'Unsupported WebSocket message type: ' + e.data.constructor.name\n        };\n\n        if (this._onError) {\n          this._onError(LoaderErrors.EXCEPTION, info);\n        } else {\n          throw new RuntimeException(info.msg);\n        }\n      }\n    }\n  }, {\n    key: \"_dispatchArrayBuffer\",\n    value: function _dispatchArrayBuffer(arraybuffer) {\n      var chunk = arraybuffer;\n      var byteStart = this._receivedLength;\n      this._receivedLength += chunk.byteLength;\n\n      if (this._onDataArrival) {\n        this._onDataArrival(chunk, byteStart, this._receivedLength);\n      }\n    }\n  }, {\n    key: \"_onWebSocketError\",\n    value: function _onWebSocketError(e) {\n      this._status = LoaderStatus.kError;\n      var info = {\n        code: e.code,\n        msg: e.message\n      };\n\n      if (this._onError) {\n        this._onError(LoaderErrors.EXCEPTION, info);\n      } else {\n        throw new RuntimeException(info.msg);\n      }\n    }\n  }]);\n\n  return WebSocketLoader;\n}(BaseLoader);\n\nexport default WebSocketLoader;","map":{"version":3,"sources":["/Users/mitchlew/Documents/Streaming/streams/client/node_modules/flv.js/src/io/websocket-loader.js"],"names":["Log","BaseLoader","LoaderStatus","LoaderErrors","RuntimeException","WebSocketLoader","self","WebSocket","e","TAG","_needStash","_ws","_requestAbort","_receivedLength","abort","dataSource","ws","url","binaryType","onopen","_onWebSocketOpen","bind","onclose","_onWebSocketClose","onmessage","_onWebSocketMessage","onerror","_onWebSocketError","_status","kConnecting","kError","info","code","msg","message","_onError","EXCEPTION","readyState","close","kComplete","kBuffering","_onComplete","data","ArrayBuffer","_dispatchArrayBuffer","Blob","reader","FileReader","onload","result","readAsArrayBuffer","constructor","name","arraybuffer","chunk","byteStart","byteLength","_onDataArrival"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;AAkBA,OAAOA,GAAP,MAAgB,oBAAhB;AACA,SAAQC,UAAR,EAAoBC,YAApB,EAAkCC,YAAlC,QAAqD,aAArD;AACA,SAAQC,gBAAR,QAA+B,uBAA/B,C,CAEA;;IACMC,e;;;;;;;kCAEmB;AACjB,UAAI;AACA,eAAQ,OAAOC,IAAI,CAACC,SAAZ,KAA0B,WAAlC;AACH,OAFD,CAEE,OAAOC,CAAP,EAAU;AACR,eAAO,KAAP;AACH;AACJ;;;AAED,6BAAc;AAAA;;AAAA;;AACV,8BAAM,kBAAN;AACA,UAAKC,GAAL,GAAW,iBAAX;AAEA,UAAKC,UAAL,GAAkB,IAAlB;AAEA,UAAKC,GAAL,GAAW,IAAX;AACA,UAAKC,aAAL,GAAqB,KAArB;AACA,UAAKC,eAAL,GAAuB,CAAvB;AARU;AASb;;;;8BAES;AACN,UAAI,KAAKF,GAAT,EAAc;AACV,aAAKG,KAAL;AACH;;AACD;AACH;;;yBAEIC,U,EAAY;AACb,UAAI;AACA,YAAIC,EAAE,GAAG,KAAKL,GAAL,GAAW,IAAIL,IAAI,CAACC,SAAT,CAAmBQ,UAAU,CAACE,GAA9B,CAApB;AACAD,QAAAA,EAAE,CAACE,UAAH,GAAgB,aAAhB;AACAF,QAAAA,EAAE,CAACG,MAAH,GAAY,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAZ;AACAL,QAAAA,EAAE,CAACM,OAAH,GAAa,KAAKC,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAb;AACAL,QAAAA,EAAE,CAACQ,SAAH,GAAe,KAAKC,mBAAL,CAAyBJ,IAAzB,CAA8B,IAA9B,CAAf;AACAL,QAAAA,EAAE,CAACU,OAAH,GAAa,KAAKC,iBAAL,CAAuBN,IAAvB,CAA4B,IAA5B,CAAb;AAEA,aAAKO,OAAL,GAAe1B,YAAY,CAAC2B,WAA5B;AACH,OATD,CASE,OAAOrB,CAAP,EAAU;AACR,aAAKoB,OAAL,GAAe1B,YAAY,CAAC4B,MAA5B;AAEA,YAAIC,IAAI,GAAG;AAACC,UAAAA,IAAI,EAAExB,CAAC,CAACwB,IAAT;AAAeC,UAAAA,GAAG,EAAEzB,CAAC,CAAC0B;AAAtB,SAAX;;AAEA,YAAI,KAAKC,QAAT,EAAmB;AACf,eAAKA,QAAL,CAAchC,YAAY,CAACiC,SAA3B,EAAsCL,IAAtC;AACH,SAFD,MAEO;AACH,gBAAM,IAAI3B,gBAAJ,CAAqB2B,IAAI,CAACE,GAA1B,CAAN;AACH;AACJ;AACJ;;;4BAEO;AACJ,UAAIjB,EAAE,GAAG,KAAKL,GAAd;;AACA,UAAIK,EAAE,KAAKA,EAAE,CAACqB,UAAH,KAAkB,CAAlB,IAAuBrB,EAAE,CAACqB,UAAH,KAAkB,CAA9C,CAAN,EAAwD;AAAG;AACvD,aAAKzB,aAAL,GAAqB,IAArB;AACAI,QAAAA,EAAE,CAACsB,KAAH;AACH;;AAED,WAAK3B,GAAL,GAAW,IAAX;AACA,WAAKiB,OAAL,GAAe1B,YAAY,CAACqC,SAA5B;AACH;;;qCAEgB/B,C,EAAG;AAChB,WAAKoB,OAAL,GAAe1B,YAAY,CAACsC,UAA5B;AACH;;;sCAEiBhC,C,EAAG;AACjB,UAAI,KAAKI,aAAL,KAAuB,IAA3B,EAAiC;AAC7B,aAAKA,aAAL,GAAqB,KAArB;AACA;AACH;;AAED,WAAKgB,OAAL,GAAe1B,YAAY,CAACqC,SAA5B;;AAEA,UAAI,KAAKE,WAAT,EAAsB;AAClB,aAAKA,WAAL,CAAiB,CAAjB,EAAoB,KAAK5B,eAAL,GAAuB,CAA3C;AACH;AACJ;;;wCAEmBL,C,EAAG;AAAA;;AACnB,UAAIA,CAAC,CAACkC,IAAF,YAAkBC,WAAtB,EAAmC;AAC/B,aAAKC,oBAAL,CAA0BpC,CAAC,CAACkC,IAA5B;AACH,OAFD,MAEO,IAAIlC,CAAC,CAACkC,IAAF,YAAkBG,IAAtB,EAA4B;AAC/B,YAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAgB,YAAM;AAClB,UAAA,MAAI,CAACJ,oBAAL,CAA0BE,MAAM,CAACG,MAAjC;AACH,SAFD;;AAGAH,QAAAA,MAAM,CAACI,iBAAP,CAAyB1C,CAAC,CAACkC,IAA3B;AACH,OANM,MAMA;AACH,aAAKd,OAAL,GAAe1B,YAAY,CAAC4B,MAA5B;AACA,YAAIC,IAAI,GAAG;AAACC,UAAAA,IAAI,EAAE,CAAC,CAAR;AAAWC,UAAAA,GAAG,EAAE,yCAAyCzB,CAAC,CAACkC,IAAF,CAAOS,WAAP,CAAmBC;AAA5E,SAAX;;AAEA,YAAI,KAAKjB,QAAT,EAAmB;AACf,eAAKA,QAAL,CAAchC,YAAY,CAACiC,SAA3B,EAAsCL,IAAtC;AACH,SAFD,MAEO;AACH,gBAAM,IAAI3B,gBAAJ,CAAqB2B,IAAI,CAACE,GAA1B,CAAN;AACH;AACJ;AACJ;;;yCAEoBoB,W,EAAa;AAC9B,UAAIC,KAAK,GAAGD,WAAZ;AACA,UAAIE,SAAS,GAAG,KAAK1C,eAArB;AACA,WAAKA,eAAL,IAAwByC,KAAK,CAACE,UAA9B;;AAEA,UAAI,KAAKC,cAAT,EAAyB;AACrB,aAAKA,cAAL,CAAoBH,KAApB,EAA2BC,SAA3B,EAAsC,KAAK1C,eAA3C;AACH;AACJ;;;sCAEiBL,C,EAAG;AACjB,WAAKoB,OAAL,GAAe1B,YAAY,CAAC4B,MAA5B;AAEA,UAAIC,IAAI,GAAG;AACPC,QAAAA,IAAI,EAAExB,CAAC,CAACwB,IADD;AAEPC,QAAAA,GAAG,EAAEzB,CAAC,CAAC0B;AAFA,OAAX;;AAKA,UAAI,KAAKC,QAAT,EAAmB;AACf,aAAKA,QAAL,CAAchC,YAAY,CAACiC,SAA3B,EAAsCL,IAAtC;AACH,OAFD,MAEO;AACH,cAAM,IAAI3B,gBAAJ,CAAqB2B,IAAI,CAACE,GAA1B,CAAN;AACH;AACJ;;;;EA3HyBhC,U;;AA+H9B,eAAeI,eAAf","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n// For FLV over WebSocket live stream\nclass WebSocketLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            return (typeof self.WebSocket !== 'undefined');\n        } catch (e) {\n            return false;\n        }\n    }\n\n    constructor() {\n        super('websocket-loader');\n        this.TAG = 'WebSocketLoader';\n\n        this._needStash = true;\n\n        this._ws = null;\n        this._requestAbort = false;\n        this._receivedLength = 0;\n    }\n\n    destroy() {\n        if (this._ws) {\n            this.abort();\n        }\n        super.destroy();\n    }\n\n    open(dataSource) {\n        try {\n            let ws = this._ws = new self.WebSocket(dataSource.url);\n            ws.binaryType = 'arraybuffer';\n            ws.onopen = this._onWebSocketOpen.bind(this);\n            ws.onclose = this._onWebSocketClose.bind(this);\n            ws.onmessage = this._onWebSocketMessage.bind(this);\n            ws.onerror = this._onWebSocketError.bind(this);\n\n            this._status = LoaderStatus.kConnecting;\n        } catch (e) {\n            this._status = LoaderStatus.kError;\n\n            let info = {code: e.code, msg: e.message};\n\n            if (this._onError) {\n                this._onError(LoaderErrors.EXCEPTION, info);\n            } else {\n                throw new RuntimeException(info.msg);\n            }\n        }\n    }\n\n    abort() {\n        let ws = this._ws;\n        if (ws && (ws.readyState === 0 || ws.readyState === 1)) {  // CONNECTING || OPEN\n            this._requestAbort = true;\n            ws.close();\n        }\n\n        this._ws = null;\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _onWebSocketOpen(e) {\n        this._status = LoaderStatus.kBuffering;\n    }\n\n    _onWebSocketClose(e) {\n        if (this._requestAbort === true) {\n            this._requestAbort = false;\n            return;\n        }\n\n        this._status = LoaderStatus.kComplete;\n\n        if (this._onComplete) {\n            this._onComplete(0, this._receivedLength - 1);\n        }\n    }\n\n    _onWebSocketMessage(e) {\n        if (e.data instanceof ArrayBuffer) {\n            this._dispatchArrayBuffer(e.data);\n        } else if (e.data instanceof Blob) {\n            let reader = new FileReader();\n            reader.onload = () => {\n                this._dispatchArrayBuffer(reader.result);\n            };\n            reader.readAsArrayBuffer(e.data);\n        } else {\n            this._status = LoaderStatus.kError;\n            let info = {code: -1, msg: 'Unsupported WebSocket message type: ' + e.data.constructor.name};\n\n            if (this._onError) {\n                this._onError(LoaderErrors.EXCEPTION, info);\n            } else {\n                throw new RuntimeException(info.msg);\n            }\n        }\n    }\n\n    _dispatchArrayBuffer(arraybuffer) {\n        let chunk = arraybuffer;\n        let byteStart = this._receivedLength;\n        this._receivedLength += chunk.byteLength;\n\n        if (this._onDataArrival) {\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\n        }\n    }\n\n    _onWebSocketError(e) {\n        this._status = LoaderStatus.kError;\n\n        let info = {\n            code: e.code,\n            msg: e.message\n        };\n\n        if (this._onError) {\n            this._onError(LoaderErrors.EXCEPTION, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n}\n\nexport default WebSocketLoader;"]},"metadata":{},"sourceType":"module"}