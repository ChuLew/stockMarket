{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/dashboard/Chart.js\";\nimport React from \"react\";\nimport { ResponsiveContainer } from \"recharts\";\nimport Title from \"./Title\";\nimport Plot from \"react-plotly.js\";\nimport { connect } from \"react-redux\";\nimport { getStocks, apiRunOut } from \"../actions\";\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStocks();\n    this.props.getStocks(this.props.currentCompany);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currCompany !== this.props.currCompany) {\n      //this.props.getStocks(this.props.currentCompany);\n      this.fetchStock();\n    }\n\n    if (this.props.historics === undefined) {\n      console.log(\"using second api key\");\n      this.props.apiRunOut(this.props.currentCompany);\n    }\n\n    if (this.props.hisotircs === undefined) {\n      console.log(\"using third api key\");\n      this.props.apiThird(this.props.currentCompany);\n    }\n  } //WUOT41WJEJHDWT6T louwguinmiapi key\n\n\n  fetchStocks() {\n    const pointerToThis = this;\n    console.log(pointerToThis);\n    const API_KEY = 'HGJWFG4N8AQ66ICD';\n    let StockSymbol = 'FB';\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n\n      for (var key in data['Time Series (Daily)']) {\n        stockChartXValuesFunction.push(key);\n        stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n      } // console.log(stockChartXValuesFunction);\n\n\n      pointerToThis.setState({\n        stockChartXValues: stockChartXValuesFunction,\n        stockChartYValues: stockChartYValuesFunction\n      });\n    });\n  }\n\n  fetchStock() {\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n\n    for (var key in this.props.historics) {\n      stockChartXValuesFunction.push(key);\n      stockChartYValuesFunction.push(this.props.historics[key][\"1. open\"]);\n    }\n\n    this.setState({\n      stockChartXValues: stockChartXValuesFunction,\n      stockChartYValues: stockChartYValuesFunction\n    });\n    console.log(this.props.historics);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Today\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Plot, {\n      data: [{\n        x: this.state.stockChartXValues,\n        y: this.state.stockChartYValues,\n        type: \"scatter\",\n        mode: \"lines+markers\",\n        marker: {\n          color: \"red\"\n        }\n      }],\n      layout: {\n        width: 850,\n        height: 440,\n        title: \"Note Api Call frequency is limited: current Stock: \" + this.props.currCompany\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currCompany: state.stocks.currentCompany,\n    historics: state.stocks.companyInfo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStocks,\n  apiRunOut\n})(Chart);","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/dashboard/Chart.js"],"names":["React","ResponsiveContainer","Title","Plot","connect","getStocks","apiRunOut","Chart","Component","constructor","props","state","stockChartXValues","stockChartYValues","componentDidMount","fetchStocks","currentCompany","componentDidUpdate","prevProps","currCompany","fetchStock","historics","undefined","console","log","hisotircs","apiThird","pointerToThis","API_KEY","StockSymbol","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","setState","render","x","y","type","mode","marker","color","width","height","title","mapStateToProps","stocks","companyInfo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ResponsiveContainer } from \"recharts\";\nimport Title from \"./Title\";\nimport Plot from \"react-plotly.js\";\nimport { connect } from \"react-redux\";\nimport { getStocks,apiRunOut } from \"../actions\";\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: [],\n    };\n  }      \n\n  componentDidMount() {\n    this.fetchStocks();\n    this.props.getStocks(this.props.currentCompany);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.currCompany !== this.props.currCompany) {\n      //this.props.getStocks(this.props.currentCompany);\n      this.fetchStock();\n    }\n    if (this.props.historics === undefined) {\n      console.log(\"using second api key\");\n      this.props.apiRunOut(this.props.currentCompany);\n    }\n    if (this.props.hisotircs === undefined){\n      console.log(\"using third api key\");\n      this.props.apiThird(this.props.currentCompany);\n    }\n  }\n//WUOT41WJEJHDWT6T louwguinmiapi key\n  fetchStocks() {\n    const pointerToThis = this;\n    console.log(pointerToThis);\n    const API_KEY = 'HGJWFG4N8AQ66ICD';\n    let StockSymbol = 'FB';\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n\n    fetch(API_Call)\n      .then(\n        function(response) {\n          return response.json();\n        }\n      )\n      .then(\n        function(data) {\n          console.log(data);\n\n          for (var key in data['Time Series (Daily)']) {\n            stockChartXValuesFunction.push(key);\n            stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n          }\n\n          // console.log(stockChartXValuesFunction);\n          pointerToThis.setState({\n            stockChartXValues: stockChartXValuesFunction,\n            stockChartYValues: stockChartYValuesFunction\n          });\n        }\n      )\n  }\n  fetchStock() {\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n    for (var key in this.props.historics) {\n      stockChartXValuesFunction.push(key);\n      stockChartYValuesFunction.push(this.props.historics[key][\"1. open\"]);\n    }\n    this.setState({\n      stockChartXValues: stockChartXValuesFunction,\n      stockChartYValues: stockChartYValuesFunction,\n    });\n    console.log(this.props.historics);\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Title>Today</Title>\n        <ResponsiveContainer>\n          <Plot\n            data={[\n              {\n                x: this.state.stockChartXValues,\n                y: this.state.stockChartYValues,\n                type: \"scatter\",\n                mode: \"lines+markers\",\n                marker: { color: \"red\" },\n              },\n            ]}\n            layout={{ width: 850, height: 440, title:\"Note Api Call frequency is limited: current Stock: \"  + this.props.currCompany }}\n          />\n        </ResponsiveContainer>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    currCompany: state.stocks.currentCompany,\n    historics: state.stocks.companyInfo,\n  };\n};\nexport default connect(mapStateToProps, { getStocks,apiRunOut })(Chart);\n"]},"metadata":{},"sourceType":"module"}