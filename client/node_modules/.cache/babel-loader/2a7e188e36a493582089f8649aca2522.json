{"ast":null,"code":"import _classCallCheck from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _get from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Log from '../utils/logger.js';\nimport { BaseLoader, LoaderStatus, LoaderErrors } from './loader.js';\nimport { RuntimeException } from '../utils/exception.js';\n/* Notice: ms-stream may cause IE/Edge browser crash if seek too frequently!!!\n * The browser may crash in wininet.dll. Disable for now.\n *\n * For IE11/Edge browser by microsoft which supports `xhr.responseType = 'ms-stream'`\n * Notice that ms-stream API sucks. The buffer is always expanding along with downloading.\n *\n * We need to abort the xhr if buffer size exceeded limit size (e.g. 16 MiB), then do reconnect.\n * in order to release previous ArrayBuffer to avoid memory leak\n *\n * Otherwise, the ArrayBuffer will increase to a terrible size that equals final file size.\n */\n\nvar MSStreamLoader = /*#__PURE__*/function (_BaseLoader) {\n  _inherits(MSStreamLoader, _BaseLoader);\n\n  var _super = _createSuper(MSStreamLoader);\n\n  _createClass(MSStreamLoader, null, [{\n    key: \"isSupported\",\n    value: function isSupported() {\n      try {\n        if (typeof self.MSStream === 'undefined' || typeof self.MSStreamReader === 'undefined') {\n          return false;\n        }\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', 'https://example.com', true);\n        xhr.responseType = 'ms-stream';\n        return xhr.responseType === 'ms-stream';\n      } catch (e) {\n        Log.w('MSStreamLoader', e.message);\n        return false;\n      }\n    }\n  }]);\n\n  function MSStreamLoader(seekHandler, config) {\n    var _this;\n\n    _classCallCheck(this, MSStreamLoader);\n\n    _this = _super.call(this, 'xhr-msstream-loader');\n    _this.TAG = 'MSStreamLoader';\n    _this._seekHandler = seekHandler;\n    _this._config = config;\n    _this._needStash = true;\n    _this._xhr = null;\n    _this._reader = null; // MSStreamReader\n\n    _this._totalRange = null;\n    _this._currentRange = null;\n    _this._currentRequestURL = null;\n    _this._currentRedirectedURL = null;\n    _this._contentLength = null;\n    _this._receivedLength = 0;\n    _this._bufferLimit = 16 * 1024 * 1024; // 16MB\n\n    _this._lastTimeBufferSize = 0;\n    _this._isReconnecting = false;\n    return _this;\n  }\n\n  _createClass(MSStreamLoader, [{\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.isWorking()) {\n        this.abort();\n      }\n\n      if (this._reader) {\n        this._reader.onprogress = null;\n        this._reader.onload = null;\n        this._reader.onerror = null;\n        this._reader = null;\n      }\n\n      if (this._xhr) {\n        this._xhr.onreadystatechange = null;\n        this._xhr = null;\n      }\n\n      _get(_getPrototypeOf(MSStreamLoader.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"open\",\n    value: function open(dataSource, range) {\n      this._internalOpen(dataSource, range, false);\n    }\n  }, {\n    key: \"_internalOpen\",\n    value: function _internalOpen(dataSource, range, isSubrange) {\n      this._dataSource = dataSource;\n\n      if (!isSubrange) {\n        this._totalRange = range;\n      } else {\n        this._currentRange = range;\n      }\n\n      var sourceURL = dataSource.url;\n\n      if (this._config.reuseRedirectedURL) {\n        if (this._currentRedirectedURL != undefined) {\n          sourceURL = this._currentRedirectedURL;\n        } else if (dataSource.redirectedURL != undefined) {\n          sourceURL = dataSource.redirectedURL;\n        }\n      }\n\n      var seekConfig = this._seekHandler.getConfig(sourceURL, range);\n\n      this._currentRequestURL = seekConfig.url;\n      var reader = this._reader = new self.MSStreamReader();\n      reader.onprogress = this._msrOnProgress.bind(this);\n      reader.onload = this._msrOnLoad.bind(this);\n      reader.onerror = this._msrOnError.bind(this);\n      var xhr = this._xhr = new XMLHttpRequest();\n      xhr.open('GET', seekConfig.url, true);\n      xhr.responseType = 'ms-stream';\n      xhr.onreadystatechange = this._xhrOnReadyStateChange.bind(this);\n      xhr.onerror = this._xhrOnError.bind(this);\n\n      if (dataSource.withCredentials) {\n        xhr.withCredentials = true;\n      }\n\n      if (typeof seekConfig.headers === 'object') {\n        var headers = seekConfig.headers;\n\n        for (var key in headers) {\n          if (headers.hasOwnProperty(key)) {\n            xhr.setRequestHeader(key, headers[key]);\n          }\n        }\n      } // add additional headers\n\n\n      if (typeof this._config.headers === 'object') {\n        var _headers = this._config.headers;\n\n        for (var _key in _headers) {\n          if (_headers.hasOwnProperty(_key)) {\n            xhr.setRequestHeader(_key, _headers[_key]);\n          }\n        }\n      }\n\n      if (this._isReconnecting) {\n        this._isReconnecting = false;\n      } else {\n        this._status = LoaderStatus.kConnecting;\n      }\n\n      xhr.send();\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this._internalAbort();\n\n      this._status = LoaderStatus.kComplete;\n    }\n  }, {\n    key: \"_internalAbort\",\n    value: function _internalAbort() {\n      if (this._reader) {\n        if (this._reader.readyState === 1) {\n          // LOADING\n          this._reader.abort();\n        }\n\n        this._reader.onprogress = null;\n        this._reader.onload = null;\n        this._reader.onerror = null;\n        this._reader = null;\n      }\n\n      if (this._xhr) {\n        this._xhr.abort();\n\n        this._xhr.onreadystatechange = null;\n        this._xhr = null;\n      }\n    }\n  }, {\n    key: \"_xhrOnReadyStateChange\",\n    value: function _xhrOnReadyStateChange(e) {\n      var xhr = e.target;\n\n      if (xhr.readyState === 2) {\n        // HEADERS_RECEIVED\n        if (xhr.status >= 200 && xhr.status <= 299) {\n          this._status = LoaderStatus.kBuffering;\n\n          if (xhr.responseURL != undefined) {\n            var redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\n\n            if (xhr.responseURL !== this._currentRequestURL && redirectedURL !== this._currentRedirectedURL) {\n              this._currentRedirectedURL = redirectedURL;\n\n              if (this._onURLRedirect) {\n                this._onURLRedirect(redirectedURL);\n              }\n            }\n          }\n\n          var lengthHeader = xhr.getResponseHeader('Content-Length');\n\n          if (lengthHeader != null && this._contentLength == null) {\n            var length = parseInt(lengthHeader);\n\n            if (length > 0) {\n              this._contentLength = length;\n\n              if (this._onContentLengthKnown) {\n                this._onContentLengthKnown(this._contentLength);\n              }\n            }\n          }\n        } else {\n          this._status = LoaderStatus.kError;\n\n          if (this._onError) {\n            this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {\n              code: xhr.status,\n              msg: xhr.statusText\n            });\n          } else {\n            throw new RuntimeException('MSStreamLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n          }\n        }\n      } else if (xhr.readyState === 3) {\n        // LOADING\n        if (xhr.status >= 200 && xhr.status <= 299) {\n          this._status = LoaderStatus.kBuffering;\n          var msstream = xhr.response;\n\n          this._reader.readAsArrayBuffer(msstream);\n        }\n      }\n    }\n  }, {\n    key: \"_xhrOnError\",\n    value: function _xhrOnError(e) {\n      this._status = LoaderStatus.kError;\n      var type = LoaderErrors.EXCEPTION;\n      var info = {\n        code: -1,\n        msg: e.constructor.name + ' ' + e.type\n      };\n\n      if (this._onError) {\n        this._onError(type, info);\n      } else {\n        throw new RuntimeException(info.msg);\n      }\n    }\n  }, {\n    key: \"_msrOnProgress\",\n    value: function _msrOnProgress(e) {\n      var reader = e.target;\n      var bigbuffer = reader.result;\n\n      if (bigbuffer == null) {\n        // result may be null, workaround for buggy M$\n        this._doReconnectIfNeeded();\n\n        return;\n      }\n\n      var slice = bigbuffer.slice(this._lastTimeBufferSize);\n      this._lastTimeBufferSize = bigbuffer.byteLength;\n      var byteStart = this._totalRange.from + this._receivedLength;\n      this._receivedLength += slice.byteLength;\n\n      if (this._onDataArrival) {\n        this._onDataArrival(slice, byteStart, this._receivedLength);\n      }\n\n      if (bigbuffer.byteLength >= this._bufferLimit) {\n        Log.v(this.TAG, \"MSStream buffer exceeded max size near \".concat(byteStart + slice.byteLength, \", reconnecting...\"));\n\n        this._doReconnectIfNeeded();\n      }\n    }\n  }, {\n    key: \"_doReconnectIfNeeded\",\n    value: function _doReconnectIfNeeded() {\n      if (this._contentLength == null || this._receivedLength < this._contentLength) {\n        this._isReconnecting = true;\n        this._lastTimeBufferSize = 0;\n\n        this._internalAbort();\n\n        var range = {\n          from: this._totalRange.from + this._receivedLength,\n          to: -1\n        };\n\n        this._internalOpen(this._dataSource, range, true);\n      }\n    }\n  }, {\n    key: \"_msrOnLoad\",\n    value: function _msrOnLoad(e) {\n      // actually it is onComplete event\n      this._status = LoaderStatus.kComplete;\n\n      if (this._onComplete) {\n        this._onComplete(this._totalRange.from, this._totalRange.from + this._receivedLength - 1);\n      }\n    }\n  }, {\n    key: \"_msrOnError\",\n    value: function _msrOnError(e) {\n      this._status = LoaderStatus.kError;\n      var type = 0;\n      var info = null;\n\n      if (this._contentLength && this._receivedLength < this._contentLength) {\n        type = LoaderErrors.EARLY_EOF;\n        info = {\n          code: -1,\n          msg: 'MSStream meet Early-Eof'\n        };\n      } else {\n        type = LoaderErrors.EARLY_EOF;\n        info = {\n          code: -1,\n          msg: e.constructor.name + ' ' + e.type\n        };\n      }\n\n      if (this._onError) {\n        this._onError(type, info);\n      } else {\n        throw new RuntimeException(info.msg);\n      }\n    }\n  }]);\n\n  return MSStreamLoader;\n}(BaseLoader);\n\nexport default MSStreamLoader;","map":{"version":3,"sources":["/Users/mitchlew/Documents/Streaming/streams/client/node_modules/flv.js/src/io/xhr-msstream-loader.js"],"names":["Log","BaseLoader","LoaderStatus","LoaderErrors","RuntimeException","MSStreamLoader","self","MSStream","MSStreamReader","xhr","XMLHttpRequest","open","responseType","e","w","message","seekHandler","config","TAG","_seekHandler","_config","_needStash","_xhr","_reader","_totalRange","_currentRange","_currentRequestURL","_currentRedirectedURL","_contentLength","_receivedLength","_bufferLimit","_lastTimeBufferSize","_isReconnecting","isWorking","abort","onprogress","onload","onerror","onreadystatechange","dataSource","range","_internalOpen","isSubrange","_dataSource","sourceURL","url","reuseRedirectedURL","undefined","redirectedURL","seekConfig","getConfig","reader","_msrOnProgress","bind","_msrOnLoad","_msrOnError","_xhrOnReadyStateChange","_xhrOnError","withCredentials","headers","key","hasOwnProperty","setRequestHeader","_status","kConnecting","send","_internalAbort","kComplete","readyState","target","status","kBuffering","responseURL","removeURLParameters","_onURLRedirect","lengthHeader","getResponseHeader","length","parseInt","_onContentLengthKnown","kError","_onError","HTTP_STATUS_CODE_INVALID","code","msg","statusText","msstream","response","readAsArrayBuffer","type","EXCEPTION","info","constructor","name","bigbuffer","result","_doReconnectIfNeeded","slice","byteLength","byteStart","from","_onDataArrival","v","to","_onComplete","EARLY_EOF"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n/* Notice: ms-stream may cause IE/Edge browser crash if seek too frequently!!!\n * The browser may crash in wininet.dll. Disable for now.\n *\n * For IE11/Edge browser by microsoft which supports `xhr.responseType = 'ms-stream'`\n * Notice that ms-stream API sucks. The buffer is always expanding along with downloading.\n *\n * We need to abort the xhr if buffer size exceeded limit size (e.g. 16 MiB), then do reconnect.\n * in order to release previous ArrayBuffer to avoid memory leak\n *\n * Otherwise, the ArrayBuffer will increase to a terrible size that equals final file size.\n */\nclass MSStreamLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            if (typeof self.MSStream === 'undefined' || typeof self.MSStreamReader === 'undefined') {\n                return false;\n            }\n\n            let xhr = new XMLHttpRequest();\n            xhr.open('GET', 'https://example.com', true);\n            xhr.responseType = 'ms-stream';\n            return (xhr.responseType === 'ms-stream');\n        } catch (e) {\n            Log.w('MSStreamLoader', e.message);\n            return false;\n        }\n    }\n\n    constructor(seekHandler, config) {\n        super('xhr-msstream-loader');\n        this.TAG = 'MSStreamLoader';\n\n        this._seekHandler = seekHandler;\n        this._config = config;\n        this._needStash = true;\n\n        this._xhr = null;\n        this._reader = null;  // MSStreamReader\n\n        this._totalRange = null;\n        this._currentRange = null;\n\n        this._currentRequestURL = null;\n        this._currentRedirectedURL = null;\n\n        this._contentLength = null;\n        this._receivedLength = 0;\n\n        this._bufferLimit = 16 * 1024 * 1024;  // 16MB\n        this._lastTimeBufferSize = 0;\n        this._isReconnecting = false;\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        if (this._reader) {\n            this._reader.onprogress = null;\n            this._reader.onload = null;\n            this._reader.onerror = null;\n            this._reader = null;\n        }\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr = null;\n        }\n        super.destroy();\n    }\n\n    open(dataSource, range) {\n        this._internalOpen(dataSource, range, false);\n    }\n\n    _internalOpen(dataSource, range, isSubrange) {\n        this._dataSource = dataSource;\n\n        if (!isSubrange) {\n            this._totalRange = range;\n        } else {\n            this._currentRange = range;\n        }\n\n        let sourceURL = dataSource.url;\n        if (this._config.reuseRedirectedURL) {\n            if (this._currentRedirectedURL != undefined) {\n                sourceURL = this._currentRedirectedURL;\n            } else if (dataSource.redirectedURL != undefined) {\n                sourceURL = dataSource.redirectedURL;\n            }\n        }\n\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\n        this._currentRequestURL = seekConfig.url;\n\n        let reader = this._reader = new self.MSStreamReader();\n        reader.onprogress = this._msrOnProgress.bind(this);\n        reader.onload = this._msrOnLoad.bind(this);\n        reader.onerror = this._msrOnError.bind(this);\n\n        let xhr = this._xhr = new XMLHttpRequest();\n        xhr.open('GET', seekConfig.url, true);\n        xhr.responseType = 'ms-stream';\n        xhr.onreadystatechange = this._xhrOnReadyStateChange.bind(this);\n        xhr.onerror = this._xhrOnError.bind(this);\n\n        if (dataSource.withCredentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (typeof seekConfig.headers === 'object') {\n            let headers = seekConfig.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        // add additional headers\n        if (typeof this._config.headers === 'object') {\n            let headers = this._config.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        if (this._isReconnecting) {\n            this._isReconnecting = false;\n        } else {\n            this._status = LoaderStatus.kConnecting;\n        }\n        xhr.send();\n    }\n\n    abort() {\n        this._internalAbort();\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _internalAbort() {\n        if (this._reader) {\n            if (this._reader.readyState === 1) {  // LOADING\n                this._reader.abort();\n            }\n            this._reader.onprogress = null;\n            this._reader.onload = null;\n            this._reader.onerror = null;\n            this._reader = null;\n        }\n        if (this._xhr) {\n            this._xhr.abort();\n            this._xhr.onreadystatechange = null;\n            this._xhr = null;\n        }\n    }\n\n    _xhrOnReadyStateChange(e) {\n        let xhr = e.target;\n\n        if (xhr.readyState === 2) {  // HEADERS_RECEIVED\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                this._status = LoaderStatus.kBuffering;\n\n                if (xhr.responseURL != undefined) {\n                    let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\n                    if (xhr.responseURL !== this._currentRequestURL && redirectedURL !== this._currentRedirectedURL) {\n                        this._currentRedirectedURL = redirectedURL;\n                        if (this._onURLRedirect) {\n                            this._onURLRedirect(redirectedURL);\n                        }\n                    }\n                }\n\n                let lengthHeader = xhr.getResponseHeader('Content-Length');\n                if (lengthHeader != null && this._contentLength == null) {\n                    let length = parseInt(lengthHeader);\n                    if (length > 0) {\n                        this._contentLength = length;\n                        if (this._onContentLengthKnown) {\n                            this._onContentLengthKnown(this._contentLength);\n                        }\n                    }\n                }\n            } else {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\n                } else {\n                    throw new RuntimeException('MSStreamLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n                }\n            }\n        } else if (xhr.readyState === 3) {  // LOADING\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                this._status = LoaderStatus.kBuffering;\n\n                let msstream = xhr.response;\n                this._reader.readAsArrayBuffer(msstream);\n            }\n        }\n    }\n\n    _xhrOnError(e) {\n        this._status = LoaderStatus.kError;\n        let type = LoaderErrors.EXCEPTION;\n        let info = {code: -1, msg: e.constructor.name + ' ' + e.type};\n\n        if (this._onError) {\n            this._onError(type, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n    _msrOnProgress(e) {\n        let reader = e.target;\n        let bigbuffer = reader.result;\n        if (bigbuffer == null) {  // result may be null, workaround for buggy M$\n            this._doReconnectIfNeeded();\n            return;\n        }\n\n        let slice = bigbuffer.slice(this._lastTimeBufferSize);\n        this._lastTimeBufferSize = bigbuffer.byteLength;\n        let byteStart = this._totalRange.from + this._receivedLength;\n        this._receivedLength += slice.byteLength;\n\n        if (this._onDataArrival) {\n            this._onDataArrival(slice, byteStart, this._receivedLength);\n        }\n\n        if (bigbuffer.byteLength >= this._bufferLimit) {\n            Log.v(this.TAG, `MSStream buffer exceeded max size near ${byteStart + slice.byteLength}, reconnecting...`);\n            this._doReconnectIfNeeded();\n        }\n    }\n\n    _doReconnectIfNeeded() {\n        if (this._contentLength == null || this._receivedLength < this._contentLength) {\n            this._isReconnecting = true;\n            this._lastTimeBufferSize = 0;\n            this._internalAbort();\n\n            let range = {\n                from: this._totalRange.from + this._receivedLength,\n                to: -1\n            };\n            this._internalOpen(this._dataSource, range, true);\n        }\n    }\n\n    _msrOnLoad(e) {  // actually it is onComplete event\n        this._status = LoaderStatus.kComplete;\n        if (this._onComplete) {\n            this._onComplete(this._totalRange.from, this._totalRange.from + this._receivedLength - 1);\n        }\n    }\n\n    _msrOnError(e) {\n        this._status = LoaderStatus.kError;\n        let type = 0;\n        let info = null;\n\n        if (this._contentLength && this._receivedLength < this._contentLength) {\n            type = LoaderErrors.EARLY_EOF;\n            info = {code: -1, msg: 'MSStream meet Early-Eof'};\n        } else {\n            type = LoaderErrors.EARLY_EOF;\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\n        }\n\n        if (this._onError) {\n            this._onError(type, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n}\n\nexport default MSStreamLoader;"]},"metadata":{},"sourceType":"module"}