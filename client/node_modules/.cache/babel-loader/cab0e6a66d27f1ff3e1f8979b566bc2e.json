{"ast":null,"code":"import streams from \"../apis/streams\"; // eslint-disable-next-line\n\nimport stock from \"../apis/stock\";\nimport history from \"../history\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM, CREATE_PERSON, EDIT_HOLDING, CURRENT_PERSON, GET_STOCK_INFO, CHANGE_COMPANY } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const changeCurrentCompany = company => {\n  return {\n    type: CHANGE_COMPANY,\n    payload: company\n  };\n};\nexport const getStocks = company => async (dispatch, getState) => {\n  const API_KEY = '82N2UO66AVHA2EFY';\n  const response = await stock.get('/search', {\n    params: {\n      function: 'TIME_SERIES_DAILY_ADJUSTED',\n      symbol: company,\n      //this might be preconfigured but we want to pass in a stock we want to search for now lets keep this \n      apikey: API_KEY\n    }\n  });\n  dispatch({\n    type: GET_STOCK_INFO,\n    payload: response.data['Time Series (Daily)']\n  });\n  console.log(response.data['Time Series (Daily)']);\n}; // export const apiRunOut = (company) => async(dispatch,getState)=>{\n//   const API_KEY = 'HGJWFG4N8AQ66ICD';\n//   const response = await stock.get('/search', {\n//     params:{\n//       function:'TIME_SERIES_DAILY_ADJUSTED',\n//       symbol:company, //this might be preconfigured but we want to pass in a stock we want to search for now lets keep this \n//       apikey:API_KEY\n//      },\n//   });\n//  dispatch({type:GET_STOCK_INFO, payload:response.data['Time Series (Daily)']}) \n//  console.log(response.data['Time Series (Daily)']);\n// };\n// export const apiThird = (company) => async(dispatch,getState)=>{\n//   const API_KEY = 'WUOT41WJEJHDWT6T';\n//   const response = await stock.get('/search', {\n//     params:{\n//       function:'TIME_SERIES_DAILY_ADJUSTED',\n//       symbol:company, //this might be preconfigured but we want to pass in a stock we want to search for now lets keep this \n//       apikey:API_KEY\n//      },\n//   });\n//  dispatch({type:GET_STOCK_INFO, payload:response.data['Time Series (Daily)']}) \n//  console.log(response.data['Time Series (Daily)']);\n// };\n\nexport const createPerson = object => async (dispatch, getState) => {\n  const response = await streams.post(\"/api/persons\", { ...object\n  });\n  dispatch({\n    type: CREATE_PERSON,\n    payload: response.data\n  });\n};\nexport const currentPerson = userid => {\n  return {\n    type: CURRENT_PERSON,\n    payload: userid\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post(\"/api/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/api/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/api/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/api/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/api/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n  history.push(\"/\");\n};","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/actions/index.js"],"names":["streams","stock","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","CREATE_PERSON","EDIT_HOLDING","CURRENT_PERSON","GET_STOCK_INFO","CHANGE_COMPANY","signIn","userId","type","payload","signOut","changeCurrentCompany","company","getStocks","dispatch","getState","API_KEY","response","get","params","function","symbol","apikey","data","console","log","createPerson","object","post","currentPerson","userid","createStream","formValues","auth","push","fetchStreams","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"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","sourcesContent":["import streams from \"../apis/streams\";\n// eslint-disable-next-line\nimport stock from \"../apis/stock\";\nimport history from \"../history\";\n\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM,\n  CREATE_PERSON,\n  EDIT_HOLDING,\n  CURRENT_PERSON,\n  GET_STOCK_INFO,\n  CHANGE_COMPANY\n} from \"./types\";\n\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId,\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\nexport const changeCurrentCompany = (company) => {\n  return {\n    type: CHANGE_COMPANY,\n    payload: company\n  }\n}\nexport const getStocks = (company) => async(dispatch,getState)=>{\n  const API_KEY = '82N2UO66AVHA2EFY';\n  const response = await stock.get('/search', {\n    params:{\n      function:'TIME_SERIES_DAILY_ADJUSTED',\n      symbol:company, //this might be preconfigured but we want to pass in a stock we want to search for now lets keep this \n      apikey:API_KEY\n     },\n  });\n dispatch({type:GET_STOCK_INFO, payload:response.data['Time Series (Daily)']}) \n console.log(response.data['Time Series (Daily)']);\n};\n// export const apiRunOut = (company) => async(dispatch,getState)=>{\n//   const API_KEY = 'HGJWFG4N8AQ66ICD';\n//   const response = await stock.get('/search', {\n//     params:{\n//       function:'TIME_SERIES_DAILY_ADJUSTED',\n//       symbol:company, //this might be preconfigured but we want to pass in a stock we want to search for now lets keep this \n//       apikey:API_KEY\n//      },\n//   });\n//  dispatch({type:GET_STOCK_INFO, payload:response.data['Time Series (Daily)']}) \n//  console.log(response.data['Time Series (Daily)']);\n// };\n// export const apiThird = (company) => async(dispatch,getState)=>{\n//   const API_KEY = 'WUOT41WJEJHDWT6T';\n//   const response = await stock.get('/search', {\n//     params:{\n//       function:'TIME_SERIES_DAILY_ADJUSTED',\n//       symbol:company, //this might be preconfigured but we want to pass in a stock we want to search for now lets keep this \n//       apikey:API_KEY\n//      },\n//   });\n//  dispatch({type:GET_STOCK_INFO, payload:response.data['Time Series (Daily)']}) \n//  console.log(response.data['Time Series (Daily)']);\n// };\nexport const createPerson = (object) => async(dispatch,getState)=>{\n  const response = await streams.post(\"/api/persons\",{...object})\n  dispatch({type:CREATE_PERSON, payload:response.data});\n}\nexport const currentPerson = (userid) => {\n  return {\n    type:CURRENT_PERSON,\n    payload:userid\n  }\n}\nexport const createStream = (formValues) => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post(\"/api/streams\", {\n    ...formValues,\n    userId,\n  });\n\n  dispatch({ type: CREATE_STREAM, payload: response.data });\n  history.push(\"/\");\n};\n\nexport const fetchStreams = () => async (dispatch) => {\n  const response = await streams.get(\"/api/streams\");\n\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async (dispatch) => {\n  const response = await streams.get(`/api/streams/${id}`);\n\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async (dispatch) => {\n  const response = await streams.patch(`/api/streams/${id}`, formValues);\n\n  dispatch({ type: EDIT_STREAM, payload: response.data });\n  history.push(\"/\");\n};\n\nexport const deleteStream = (id) => async (dispatch) => {\n  await streams.delete(`/api/streams/${id}`);\n\n  dispatch({ type: DELETE_STREAM, payload: id });\n  history.push(\"/\");\n};\n"]},"metadata":{},"sourceType":"module"}