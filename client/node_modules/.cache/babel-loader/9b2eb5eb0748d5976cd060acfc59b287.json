{"ast":null,"code":"import _classCallCheck from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import Link from\"@material-ui/core/Link\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import Title from\"./Title\";import StockPopup from\"../components/streams/StockPopup\";import Popup from\"reactjs-popup\";import\"reactjs-popup/dist/index.css\";import{connect}from\"react-redux\";import{fetchStocks}from\"../actions\";var Orders=/*#__PURE__*/function(_React$Component){_inherits(Orders,_React$Component);var _super=_createSuper(Orders);function Orders(){var _this;_classCallCheck(this,Orders);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.fetchem=function(){_this.props.fetchStocks();};return _this;}_createClass(Orders,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchStocks();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.listOfStocks===this.props.listOfStocks){this.props.fetchStocks();}}},{key:\"render\",value:function render(){var _this2=this;console.log(this.props.listOfStocks);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Title,null,\"Summary\"),/*#__PURE__*/React.createElement(Table,{size:\"small\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null),/*#__PURE__*/React.createElement(TableCell,null),/*#__PURE__*/React.createElement(TableCell,null),/*#__PURE__*/React.createElement(TableCell,null),/*#__PURE__*/React.createElement(TableCell,null),/*#__PURE__*/React.createElement(TableCell,null),/*#__PURE__*/React.createElement(TableCell,null),/*#__PURE__*/React.createElement(TableCell,null),/*#__PURE__*/React.createElement(TableCell,null)),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Name\"),/*#__PURE__*/React.createElement(TableCell,null,\"Opening Price\"),/*#__PURE__*/React.createElement(TableCell,null,\"Todays Change\"),/*#__PURE__*/React.createElement(TableCell,null,\"Today Dollar Gain/Loss\"),/*#__PURE__*/React.createElement(TableCell,null,\"Today Percent Gain/Loss\"),/*#__PURE__*/React.createElement(TableCell,null,\"Current Value\"),/*#__PURE__*/React.createElement(TableCell,null,\"Quantity\"),/*#__PURE__*/React.createElement(TableCell,null,\"Total Value\"))),/*#__PURE__*/React.createElement(TableBody,null,Object.keys(this.props.listOfStocks).map(function(keyName,i){return/*#__PURE__*/React.createElement(TableRow,{key:i},/*#__PURE__*/React.createElement(TableCell,null,_this2.props.listOfStocks[keyName].symbol),/*#__PURE__*/React.createElement(TableCell,null,_this2.props.listOfStocks[keyName].opentoday),/*#__PURE__*/React.createElement(TableCell,null,(_this2.props.listOfStocks[keyName].purchaseprice-_this2.props.listOfStocks[keyName].opentoday).toFixed(2)),/*#__PURE__*/React.createElement(TableCell,null,(_this2.props.listOfStocks[keyName].purchaseprice-_this2.props.listOfStocks[keyName].opentoday).toFixed(2)*_this2.props.listOfStocks[keyName].quantity),/*#__PURE__*/React.createElement(TableCell,null,((1-_this2.props.listOfStocks[keyName].opentoday/_this2.props.listOfStocks[keyName].purchaseprice)*100).toFixed(2),\"%\"),/*#__PURE__*/React.createElement(TableCell,null,_this2.props.listOfStocks[keyName].currentprice),/*#__PURE__*/React.createElement(TableCell,null,_this2.props.listOfStocks[keyName].quantity),/*#__PURE__*/React.createElement(TableCell,null,_this2.props.listOfStocks[keyName].currentprice*_this2.props.listOfStocks[keyName].quantity));}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Popup,{trigger:/*#__PURE__*/React.createElement(\"button\",null,\"Buy Stocks\"),position:\"right center\"},/*#__PURE__*/React.createElement(StockPopup,null)),/*#__PURE__*/React.createElement(\"button\",{onClick:this.fetchem},\"Load New Stock Transactions\")));}}]);return Orders;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{listOfStocks:state.stocks.listStocks};};export default connect(mapStateToProps,{fetchStocks:fetchStocks})(Orders);// be able to edit holding price","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/dashboard/Orders.js"],"names":["React","Link","Table","TableBody","TableCell","TableHead","TableRow","Title","StockPopup","Popup","connect","fetchStocks","Orders","fetchem","props","prevProps","listOfStocks","console","log","Object","keys","map","keyName","i","symbol","opentoday","purchaseprice","toFixed","quantity","currentprice","Component","mapStateToProps","state","stocks","listStocks"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport StockPopup from \"../components/streams/StockPopup\";\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\nimport { connect } from \"react-redux\";\nimport { fetchStocks } from \"../actions\";\n\n\nclass Orders extends React.Component {\n  componentDidMount() {\n    this.props.fetchStocks();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.listOfStocks === this.props.listOfStocks) {\n      this.props.fetchStocks();\n    }\n  }\n  fetchem = () => {\n    this.props.fetchStocks();\n  };\n  render() {\n    console.log(this.props.listOfStocks);\n    return (\n      <React.Fragment>\n        <Title>Summary</Title>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Opening Price</TableCell>\n              <TableCell>Todays Change</TableCell>\n              <TableCell>Today Dollar Gain/Loss</TableCell>\n              <TableCell>Today Percent Gain/Loss</TableCell>\n              <TableCell>Current Value</TableCell>\n              <TableCell>Quantity</TableCell>\n              <TableCell>Total Value</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {Object.keys(this.props.listOfStocks).map((keyName, i) => (\n              <TableRow key={i}>\n                <TableCell>{this.props.listOfStocks[keyName].symbol}</TableCell>\n                <TableCell>\n                  {this.props.listOfStocks[keyName].opentoday}\n                </TableCell>\n                <TableCell>\n                  {(\n                    this.props.listOfStocks[keyName].purchaseprice -\n                    this.props.listOfStocks[keyName].opentoday\n                  ).toFixed(2)}\n                </TableCell>\n                <TableCell>\n                  {(\n                    this.props.listOfStocks[keyName].purchaseprice -\n                    this.props.listOfStocks[keyName].opentoday\n                  ).toFixed(2) * this.props.listOfStocks[keyName].quantity}\n                </TableCell>\n                <TableCell>{((1-(this.props.listOfStocks[keyName].opentoday /\n                    this.props.listOfStocks[keyName].purchaseprice))*100).toFixed(2)}%</TableCell>\n                \n                <TableCell>\n                  {this.props.listOfStocks[keyName].currentprice}\n                </TableCell>\n                <TableCell>\n                  {this.props.listOfStocks[keyName].quantity}\n                </TableCell>\n                <TableCell>{this.props.listOfStocks[keyName].currentprice*this.props.listOfStocks[keyName].quantity}</TableCell>\n              </TableRow>\n            ))}\n            {/* {rows.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.date}</TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.shipTo}</TableCell>\n                <TableCell>{row.paymentMethod}</TableCell>\n                <TableCell align=\"right\">{row.amount}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableBody>\n        </Table>\n        <div>\n          <Popup trigger={<button>Buy Stocks</button>} position=\"right center\">\n            <StockPopup />\n          </Popup>\n          <button onClick={this.fetchem}>Load New Stock Transactions</button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    listOfStocks: state.stocks.listStocks,\n  };\n};\nexport default connect(mapStateToProps, { fetchStocks })(Orders);\n\n// be able to edit holding price\n"]},"metadata":{},"sourceType":"module"}