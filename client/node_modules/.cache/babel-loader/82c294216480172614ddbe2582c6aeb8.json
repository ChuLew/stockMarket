{"ast":null,"code":"import streams from \"../apis/streams\"; // eslint-disable-next-line\n\nimport stock from \"../apis/stock\";\nimport history from \"../history\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM, CREATE_PERSON, EDIT_HOLDING } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createPerson = userId => async (dispatch, getState) => {\n  const {\n    identification\n  } = userId;\n  const response = await streams.post(\"/api/persons\", { ...identification\n  });\n  console.log(response);\n  dispatch({\n    type: CREATE_PERSON,\n    payload: response.data\n  });\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post(\"/api/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/api/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/api/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/api/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/api/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n  history.push(\"/\");\n};","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/actions/index.js"],"names":["streams","stock","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","CREATE_PERSON","EDIT_HOLDING","signIn","userId","type","payload","signOut","createPerson","dispatch","getState","identification","response","post","console","log","data","createStream","formValues","auth","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"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","sourcesContent":["import streams from \"../apis/streams\";\n// eslint-disable-next-line\nimport stock from \"../apis/stock\";\nimport history from \"../history\";\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM,\n  CREATE_PERSON,\n  EDIT_HOLDING\n} from \"./types\";\n\n\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId,\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\nexport const createPerson = (userId) => async(dispatch,getState)=>{\n  const {identification} = userId;\n  const response = await streams.post(\"/api/persons\",{...identification})\n  console.log(response);\n  dispatch({type:CREATE_PERSON, payload:response.data})\n}\nexport const createStream = (formValues) => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post(\"/api/streams\", {\n    ...formValues,\n    userId,\n  });\n\n  dispatch({ type: CREATE_STREAM, payload: response.data });\n  history.push(\"/\");\n};\n\nexport const fetchStreams = () => async (dispatch) => {\n  const response = await streams.get(\"/api/streams\");\n\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async (dispatch) => {\n  const response = await streams.get(`/api/streams/${id}`);\n\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async (dispatch) => {\n  const response = await streams.patch(`/api/streams/${id}`, formValues);\n\n  dispatch({ type: EDIT_STREAM, payload: response.data });\n  history.push(\"/\");\n};\n\nexport const deleteStream = (id) => async (dispatch) => {\n  await streams.delete(`/api/streams/${id}`);\n\n  dispatch({ type: DELETE_STREAM, payload: id });\n  history.push(\"/\");\n};\n"]},"metadata":{},"sourceType":"module"}