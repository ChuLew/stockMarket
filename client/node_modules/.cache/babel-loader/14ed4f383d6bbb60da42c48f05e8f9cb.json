{"ast":null,"code":"import _classCallCheck from\"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{signIn,signOut}from'../actions';var GoogleAuth=/*#__PURE__*/function(_React$Component){_inherits(GoogleAuth,_React$Component);var _super=_createSuper(GoogleAuth);function GoogleAuth(){var _this;_classCallCheck(this,GoogleAuth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onAuthChange=function(isSignedIn){if(isSignedIn){_this.props.signIn(_this.auth.currentUser.get().getId());}else{_this.props.signOut();}};_this.onSignInClick=function(){_this.auth.signIn();};_this.onSignOutClick=function(){_this.auth.signOut();};return _this;}_createClass(GoogleAuth,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;window.gapi.load('client:auth2',function(){window.gapi.client.init({clientId:'496982640715-41abdvvl37lqk6ahgo6l5ipmrl9joeig.apps.googleusercontent.com',scope:'email'}).then(function(){_this2.auth=window.gapi.auth2.getAuthInstance();_this2.onAuthChange(_this2.auth.isSignedIn.get());_this2.auth.isSignedIn.listen(_this2.onAuthChange);});});}},{key:\"renderAuthButton\",value:function renderAuthButton(){if(this.props.isSignedIn===null){return null;}else if(this.props.isSignedIn){return/*#__PURE__*/React.createElement(\"button\",{onClick:this.onSignOutClick,className:\"ui red google button\"},/*#__PURE__*/React.createElement(\"i\",{className:\"google icon\"}),\"Sign Out\");}else{return/*#__PURE__*/React.createElement(\"button\",{onClick:this.onSignInClick,className:\"ui red google button\"},/*#__PURE__*/React.createElement(\"i\",{className:\"google icon\"}),\"Sign In with Google\");}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,this.renderAuthButton());}}]);return GoogleAuth;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{isSignedIn:state.auth.isSignedIn};};export default connect(mapStateToProps,{signIn:signIn,signOut:signOut})(GoogleAuth);","map":{"version":3,"sources":["/Users/mitchlew/Documents/Streaming/streams/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Component","mapStateToProps","state"],"mappings":"ogBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,MAAR,CAAeC,OAAf,KAA6B,YAA7B,C,GAEMC,CAAAA,U,uVAkBJC,Y,CAAe,SAACC,UAAD,CAAgB,CAC7B,GAAGA,UAAH,CAAc,CACV,MAAKC,KAAL,CAAWL,MAAX,CAAkB,MAAKM,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB,EACH,CAFD,IAEK,CACD,MAAKJ,KAAL,CAAWJ,OAAX,GACH,CACF,C,OAEDS,a,CAAgB,UAAM,CACpB,MAAKJ,IAAL,CAAUN,MAAV,GACD,C,OAEDW,c,CAAiB,UAAM,CACrB,MAAKL,IAAL,CAAUL,OAAV,GACD,C,mGA9BmB,iBAClBW,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,CAAiC,UAAM,CACrCF,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ,CACJC,QAAQ,CACR,0EAFI,CAGJC,KAAK,CAAE,OAHH,CADR,EAMGC,IANH,CAMQ,UAAM,CACV,MAAI,CAACb,IAAL,CAAYM,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CACA,MAAI,CAAClB,YAAL,CAAkB,MAAI,CAACG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB,EACA,MAAI,CAACF,IAAL,CAAUF,UAAV,CAAqBkB,MAArB,CAA4B,MAAI,CAACnB,YAAjC,EACD,CAVH,EAWD,CAZD,EAaD,C,2DAkBkB,CACjB,GAAI,KAAKE,KAAL,CAAWD,UAAX,GAA0B,IAA9B,CAAoC,CAClC,MAAO,KAAP,CACD,CAFD,IAEO,IAAI,KAAKC,KAAL,CAAWD,UAAf,CAA2B,CAChC,mBACE,8BAAQ,OAAO,CAAE,KAAKO,cAAtB,CAAsC,SAAS,CAAC,sBAAhD,eACE,yBAAG,SAAS,CAAC,aAAb,EADF,YADF,CAMD,CAPM,IAOA,CACL,mBACE,8BAAQ,OAAO,CAAE,KAAKD,aAAtB,CAAqC,SAAS,CAAC,sBAA/C,eACE,yBAAG,SAAS,CAAC,aAAb,EADF,uBADF,CAMD,CACF,C,uCAEQ,CACP,mBAAO,+BAAM,KAAKa,gBAAL,EAAN,CAAP,CACD,C,wBAxDsBzB,KAAK,CAAC0B,S,EA0D/B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CAACtB,UAAU,CAACsB,KAAK,CAACpB,IAAN,CAAWF,UAAvB,CAAP,CACH,CAFD,CAIA,cAAeL,CAAAA,OAAO,CAAC0B,eAAD,CAAkB,CAACzB,MAAM,CAANA,MAAD,CAAQC,OAAO,CAAPA,OAAR,CAAlB,CAAP,CAA4CC,UAA5C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {signIn,signOut} from '../actions';\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client\n        .init({\n          clientId:\n          '496982640715-41abdvvl37lqk6ahgo6l5ipmrl9joeig.apps.googleusercontent.com',  \n          scope: 'email',\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get())\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if(isSignedIn){\n        this.props.signIn(this.auth.currentUser.get().getId());\n    }else{\n        this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />  \n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\nconst mapStateToProps = (state) => {\n    return {isSignedIn:state.auth.isSignedIn};\n};\n\nexport default connect(mapStateToProps, {signIn,signOut}) (GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}