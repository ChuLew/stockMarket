{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut, createPerson } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId()); //this.props.createPerson(this.auth.currentUser.get().getId())\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n      this.props.createPerson({\n        idperson: this.auth.currentUser.get().getId()\n      }); //mgl\n      // console.log(\"got here\")\n      //add new person id if one doesnt exists \n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '895329232490-cj7fe970fah76sntch6gn2i7n1st0ljd.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }), \"Sign Out\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }), \"Sign In with Google\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut,\n  createPerson\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","createPerson","GoogleAuth","Component","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","idperson","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAeC,OAAf,EAAuBC,YAAvB,QAA0C,YAA1C;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAkBvCC,YAlBuC,GAkBvBC,UAAD,IAAgB;AAC7B,UAAGA,UAAH,EAAc;AACV,aAAKC,KAAL,CAAWP,MAAX,CAAkB,KAAKQ,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB,EADU,CAET;AACJ,OAHD,MAGK;AACD,aAAKJ,KAAL,CAAWN,OAAX;AACH;AACF,KAzBsC;;AAAA,SA2BvCW,aA3BuC,GA2BvB,MAAM;AACpB,WAAKJ,IAAL,CAAUR,MAAV;AACD,WAAKO,KAAL,CAAWL,YAAX,CAAwB;AAACW,QAAAA,QAAQ,EAAC,KAAKL,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B;AAAV,OAAxB,EAFqB,CAEoD;AACxE;AACA;AACD,KAhCsC;;AAAA,SAkCvCG,cAlCuC,GAkCtB,MAAM;AACrB,WAAKN,IAAL,CAAUP,OAAV;AACD,KApCsC;AAAA;;AAEvCc,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EACR,0EAFI;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADR,EAMGC,IANH,CAMQ,MAAM;AACV,aAAKf,IAAL,GAAYQ,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKpB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBoB,MAArB,CAA4B,KAAKrB,YAAjC;AACD,OAVH;AAWD,KAZD;AAaD;;AAsBDsB,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKpB,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AAClC,aAAO,IAAP;AACD,KAFD,MAEO,IAAI,KAAKC,KAAL,CAAWD,UAAf,EAA2B;AAChC,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKQ,cAAtB;AAAsC,QAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,aADF;AAMD,KAPM,MAOA;AACL,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKF,aAAtB;AAAqC,QAAA,SAAS,EAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,wBADF;AAMD;AACF;;AAEDgB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CAAP;AACD;;AA5DsC;;AA8DzC,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAACxB,IAAAA,UAAU,EAACwB,KAAK,CAACtB,IAAN,CAAWF;AAAvB,GAAP;AACH,CAFD;;AAIA,eAAeP,OAAO,CAAC8B,eAAD,EAAkB;AAAC7B,EAAAA,MAAD;AAAQC,EAAAA,OAAR;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CAAyDC,UAAzD,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {signIn,signOut,createPerson} from '../actions';\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client\n        .init({\n          clientId:\n          '895329232490-cj7fe970fah76sntch6gn2i7n1st0ljd.apps.googleusercontent.com',  \n          scope: 'email',\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get())\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if(isSignedIn){\n        this.props.signIn(this.auth.currentUser.get().getId());\n         //this.props.createPerson(this.auth.currentUser.get().getId())\n    }else{\n        this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n   this.props.createPerson({idperson:this.auth.currentUser.get().getId()}); //mgl\n    // console.log(\"got here\")\n    //add new person id if one doesnt exists \n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />  \n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\nconst mapStateToProps = (state) => {\n    return {isSignedIn:state.auth.isSignedIn};\n};\n\nexport default connect(mapStateToProps, {signIn,signOut,createPerson}) (GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}