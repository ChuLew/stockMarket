{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/components/streams/StockPopup.js\";\nimport React, { Component } from \"react\";\nimport Form from \"./StockForm\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass StockPopup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: {},\n      buyDate: new Date(),\n      sellDate: new Date()\n    };\n\n    this.onChange = updatedValue => {\n      this.setState({\n        fields: { ...this.state.fields,\n          ...updatedValue\n        }\n      }); //make api call \n    };\n\n    this.handleChange = date => {\n      var stringDate = `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString()}-${date.getDate().toString()}`;\n      this.setState({\n        buyDate: date\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onChange: fields => this.onChange(fields),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.buyDate,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, JSON.stringify(this.state, null, 3)));\n  }\n\n}\n\nexport default StockPopup; //where this to redux and submit form to database;","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/components/streams/StockPopup.js"],"names":["React","Component","Form","DatePicker","StockPopup","state","fields","buyDate","Date","sellDate","onChange","updatedValue","setState","handleChange","date","stringDate","getFullYear","toString","getMonth","getDate","render","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCI,KADiC,GACzB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAE,IAAIC,IAAJ,EAFH;AAGNC,MAAAA,QAAQ,EAAE,IAAID,IAAJ;AAHJ,KADyB;;AAAA,SAOjCE,QAPiC,GAOtBC,YAAY,IAAI;AAEzB,WAAKC,QAAL,CAAc;AACZN,QAAAA,MAAM,EAAE,EACN,GAAG,KAAKD,KAAL,CAAWC,MADR;AAEN,aAAGK;AAFG;AADI,OAAd,EAFyB,CAQzB;AACD,KAhBgC;;AAAA,SAsBjCE,YAtBiC,GAsBlBC,IAAI,IAAI;AACrB,UAAIC,UAAU,GAAI,GAAED,IAAI,CAACE,WAAL,GAAmBC,QAAnB,EAA8B,IAAG,CAACH,IAAI,CAACI,QAAL,KAAgB,CAAjB,EAAoBD,QAApB,EAA+B,IAAGH,IAAI,CAACK,OAAL,GAAeF,QAAf,EAA0B,EAAjH;AACA,WAAKL,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAEO;AADG,OAAd;AAGD,KA3BgC;AAAA;;AA6BjCM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEd,MAAM,IAAI,KAAKI,QAAL,CAAcJ,MAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,OAAjC;AAA0C,MAAA,QAAQ,EAAE,KAAKM,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIQ,IAAI,CAACC,SAAL,CAAe,KAAKjB,KAApB,EAA2B,IAA3B,EAAiC,CAAjC,CAAJ,CAHF,CADF;AAQD;;AAtCgC;;AA0CnC,eAAeD,UAAf,C,CAEA","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"./StockForm\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass StockPopup extends Component {\n  state = {\n    fields: {},\n    buyDate: new Date(),\n    sellDate: new Date(),\n  };\n\n  onChange = updatedValue => {\n    \n    this.setState({\n      fields: {\n        ...this.state.fields,\n        ...updatedValue\n      }\n    });\n    //make api call \n  };\n  // dateParse = (date) => {\n  //   var onlyDate = date.toString().substr(0,date.toString().indexOf(','));\n  //   console.log(onlyDate);\n  //   return onlyDate\n  // }\n  handleChange = date => {  \n    var stringDate = `${date.getFullYear().toString()}-${(date.getMonth()+1).toString()}-${date.getDate().toString()}`;\n    this.setState({\n      buyDate: date\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form onChange={fields => this.onChange(fields)} />\n        <DatePicker selected={this.state.buyDate} onChange={this.handleChange}/>\n        <p>{JSON.stringify(this.state, null, 3)}</p>\n\n      </div>\n    );\n  }\n}\n\n\nexport default StockPopup;\n\n//where this to redux and submit form to database;\n"]},"metadata":{},"sourceType":"module"}