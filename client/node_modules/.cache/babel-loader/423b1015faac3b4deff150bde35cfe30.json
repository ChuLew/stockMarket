{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import ImageCard from '../pictures/ImageCard';\n\nimport ImageList from '../pictures/ImageList';\nimport { fetchStream, fetchSavedPictures } from '../../actions';\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchStream(id);\n    this.props.fetchSavedPictures();\n  }\n\n  renderPictures() {\n    const {\n      id\n    } = this.props.match.params;\n    var savedImageList = this.props.savedImages;\n    var albumPictures = [];\n    var i;\n\n    for (i = 0; i < this.props.savedImages.length; i++) {\n      // eslint-disable-next-line \n      if (savedImageList[i].album_id == id) {\n        albumPictures.push(savedImageList[i]);\n      }\n    }\n\n    console.log(savedImageList);\n    return /*#__PURE__*/React.createElement(ImageList, {\n      saved: 1,\n      id: id,\n      savedImages: this.props.savedImages,\n      albumPictures: albumPictures,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, description), this.renderPictures());\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id],\n    savedImages: Object.values(state.savedImages)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  fetchSavedPictures\n})(StreamShow);","map":{"version":3,"sources":["/Users/mitchlew/Documents/client/src/components/streams/StreamShow.js"],"names":["React","connect","ImageList","fetchStream","fetchSavedPictures","StreamShow","Component","componentDidMount","id","props","match","params","renderPictures","savedImageList","savedImages","albumPictures","i","length","album_id","push","console","log","render","stream","title","description","mapStateToProps","state","ownProps","streams","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,eAAhD;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAGvCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACA,SAAKF,KAAL,CAAWN,WAAX,CAAuBK,EAAvB;AACA,SAAKC,KAAL,CAAWL,kBAAX;AACD;;AAGDQ,EAAAA,cAAc,GAAE;AACd,UAAM;AAAEJ,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACA,QAAIE,cAAc,GAAG,KAAKJ,KAAL,CAAWK,WAAhC;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,CAAJ;;AACA,SAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAE,KAAKP,KAAL,CAAWK,WAAX,CAAuBG,MAArC,EAA4CD,CAAC,EAA7C,EAAgD;AAC9C;AACA,UAAGH,cAAc,CAACG,CAAD,CAAd,CAAkBE,QAAlB,IAA8BV,EAAjC,EAAoC;AAClCO,QAAAA,aAAa,CAACI,IAAd,CAAmBN,cAAc,CAACG,CAAD,CAAjC;AACD;AACF;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYR,cAAZ;AACA,wBAAO,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAI,CAApB;AAAuB,MAAA,EAAE,EAAIL,EAA7B;AAAiC,MAAA,WAAW,EAAI,KAAKC,KAAL,CAAWK,WAA3D;AAAwE,MAAA,aAAa,EAAIC,aAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACDO,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKb,KAAL,CAAWc,MAAhB,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKhB,KAAL,CAAWc,MAA1C;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,KAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,WAAL,CAFF,EAGG,KAAKb,cAAL,EAHH,CADF;AAOD;;AArCsC;;AAwCzC,MAAMc,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAAClB,KAAT,CAAeC,MAAf,CAAsBH,EAApC,CADH;AAELM,IAAAA,WAAW,EAAEgB,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAACb,WAApB;AAFR,GAAP;AAID,CALD;;AAOA,eAAeb,OAAO,CACpByB,eADoB,EAEpB;AAAEvB,EAAAA,WAAF;AAAcC,EAAAA;AAAd,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// import ImageCard from '../pictures/ImageCard';\nimport ImageList from '../pictures/ImageList';\nimport { fetchStream, fetchSavedPictures } from '../../actions';\n\nclass StreamShow extends React.Component {\n \n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.fetchStream(id);\n    this.props.fetchSavedPictures();\n  }\n\n\n  renderPictures(){\n    const { id } = this.props.match.params;\n    var savedImageList = this.props.savedImages;\n    var albumPictures = [];\n    var i;\n    for(i = 0; i< this.props.savedImages.length;i++){\n      // eslint-disable-next-line \n      if(savedImageList[i].album_id == id){\n        albumPictures.push(savedImageList[i]);\n      }  \n    } \n    console.log(savedImageList);\n    return <ImageList saved = {1} id = {id} savedImages = {this.props.savedImages} albumPictures = {albumPictures}/>\n  }\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading...</div>;\n    }\n\n    const { title, description } = this.props.stream;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <h5>{description}</h5>\n        {this.renderPictures()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { \n    stream: state.streams[ownProps.match.params.id],\n    savedImages: Object.values(state.savedImages)\n   };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStream,fetchSavedPictures}\n)(StreamShow);\n"]},"metadata":{},"sourceType":"module"}