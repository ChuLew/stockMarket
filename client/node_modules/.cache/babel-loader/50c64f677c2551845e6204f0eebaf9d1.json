{"ast":null,"code":"import _classCallCheck from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _get from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Log from '../utils/logger.js';\nimport Browser from '../utils/browser.js';\nimport { BaseLoader, LoaderStatus, LoaderErrors } from './loader.js';\nimport { RuntimeException } from '../utils/exception.js';\n/* fetch + stream IO loader. Currently working on chrome 43+.\n * fetch provides a better alternative http API to XMLHttpRequest\n *\n * fetch spec   https://fetch.spec.whatwg.org/\n * stream spec  https://streams.spec.whatwg.org/\n */\n\nvar FetchStreamLoader = /*#__PURE__*/function (_BaseLoader) {\n  _inherits(FetchStreamLoader, _BaseLoader);\n\n  var _super = _createSuper(FetchStreamLoader);\n\n  _createClass(FetchStreamLoader, null, [{\n    key: \"isSupported\",\n    value: function isSupported() {\n      try {\n        // fetch + stream is broken on Microsoft Edge. Disable before build 15048.\n        // see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8196907/\n        // Fixed in Jan 10, 2017. Build 15048+ removed from blacklist.\n        var isWorkWellEdge = Browser.msedge && Browser.version.minor >= 15048;\n        var browserNotBlacklisted = Browser.msedge ? isWorkWellEdge : true;\n        return self.fetch && self.ReadableStream && browserNotBlacklisted;\n      } catch (e) {\n        return false;\n      }\n    }\n  }]);\n\n  function FetchStreamLoader(seekHandler, config) {\n    var _this;\n\n    _classCallCheck(this, FetchStreamLoader);\n\n    _this = _super.call(this, 'fetch-stream-loader');\n    _this.TAG = 'FetchStreamLoader';\n    _this._seekHandler = seekHandler;\n    _this._config = config;\n    _this._needStash = true;\n    _this._requestAbort = false;\n    _this._contentLength = null;\n    _this._receivedLength = 0;\n    return _this;\n  }\n\n  _createClass(FetchStreamLoader, [{\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.isWorking()) {\n        this.abort();\n      }\n\n      _get(_getPrototypeOf(FetchStreamLoader.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"open\",\n    value: function open(dataSource, range) {\n      var _this2 = this;\n\n      this._dataSource = dataSource;\n      this._range = range;\n      var sourceURL = dataSource.url;\n\n      if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {\n        sourceURL = dataSource.redirectedURL;\n      }\n\n      var seekConfig = this._seekHandler.getConfig(sourceURL, range);\n\n      var headers = new self.Headers();\n\n      if (typeof seekConfig.headers === 'object') {\n        var configHeaders = seekConfig.headers;\n\n        for (var key in configHeaders) {\n          if (configHeaders.hasOwnProperty(key)) {\n            headers.append(key, configHeaders[key]);\n          }\n        }\n      }\n\n      var params = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default',\n        // The default policy of Fetch API in the whatwg standard\n        // Safari incorrectly indicates 'no-referrer' as default policy, fuck it\n        referrerPolicy: 'no-referrer-when-downgrade'\n      }; // add additional headers\n\n      if (typeof this._config.headers === 'object') {\n        for (var _key in this._config.headers) {\n          headers.append(_key, this._config.headers[_key]);\n        }\n      } // cors is enabled by default\n\n\n      if (dataSource.cors === false) {\n        // no-cors means 'disregard cors policy', which can only be used in ServiceWorker\n        params.mode = 'same-origin';\n      } // withCredentials is disabled by default\n\n\n      if (dataSource.withCredentials) {\n        params.credentials = 'include';\n      } // referrerPolicy from config\n\n\n      if (dataSource.referrerPolicy) {\n        params.referrerPolicy = dataSource.referrerPolicy;\n      }\n\n      this._status = LoaderStatus.kConnecting;\n      self.fetch(seekConfig.url, params).then(function (res) {\n        if (_this2._requestAbort) {\n          _this2._requestAbort = false;\n          _this2._status = LoaderStatus.kIdle;\n          return;\n        }\n\n        if (res.ok && res.status >= 200 && res.status <= 299) {\n          if (res.url !== seekConfig.url) {\n            if (_this2._onURLRedirect) {\n              var redirectedURL = _this2._seekHandler.removeURLParameters(res.url);\n\n              _this2._onURLRedirect(redirectedURL);\n            }\n          }\n\n          var lengthHeader = res.headers.get('Content-Length');\n\n          if (lengthHeader != null) {\n            _this2._contentLength = parseInt(lengthHeader);\n\n            if (_this2._contentLength !== 0) {\n              if (_this2._onContentLengthKnown) {\n                _this2._onContentLengthKnown(_this2._contentLength);\n              }\n            }\n          }\n\n          return _this2._pump.call(_this2, res.body.getReader());\n        } else {\n          _this2._status = LoaderStatus.kError;\n\n          if (_this2._onError) {\n            _this2._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {\n              code: res.status,\n              msg: res.statusText\n            });\n          } else {\n            throw new RuntimeException('FetchStreamLoader: Http code invalid, ' + res.status + ' ' + res.statusText);\n          }\n        }\n      }).catch(function (e) {\n        _this2._status = LoaderStatus.kError;\n\n        if (_this2._onError) {\n          _this2._onError(LoaderErrors.EXCEPTION, {\n            code: -1,\n            msg: e.message\n          });\n        } else {\n          throw e;\n        }\n      });\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this._requestAbort = true;\n    }\n  }, {\n    key: \"_pump\",\n    value: function _pump(reader) {\n      var _this3 = this;\n\n      // ReadableStreamReader\n      return reader.read().then(function (result) {\n        if (result.done) {\n          // First check received length\n          if (_this3._contentLength !== null && _this3._receivedLength < _this3._contentLength) {\n            // Report Early-EOF\n            _this3._status = LoaderStatus.kError;\n            var type = LoaderErrors.EARLY_EOF;\n            var info = {\n              code: -1,\n              msg: 'Fetch stream meet Early-EOF'\n            };\n\n            if (_this3._onError) {\n              _this3._onError(type, info);\n            } else {\n              throw new RuntimeException(info.msg);\n            }\n          } else {\n            // OK. Download complete\n            _this3._status = LoaderStatus.kComplete;\n\n            if (_this3._onComplete) {\n              _this3._onComplete(_this3._range.from, _this3._range.from + _this3._receivedLength - 1);\n            }\n          }\n        } else {\n          if (_this3._requestAbort === true) {\n            _this3._requestAbort = false;\n            _this3._status = LoaderStatus.kComplete;\n            return reader.cancel();\n          }\n\n          _this3._status = LoaderStatus.kBuffering;\n          var chunk = result.value.buffer;\n          var byteStart = _this3._range.from + _this3._receivedLength;\n          _this3._receivedLength += chunk.byteLength;\n\n          if (_this3._onDataArrival) {\n            _this3._onDataArrival(chunk, byteStart, _this3._receivedLength);\n          }\n\n          _this3._pump(reader);\n        }\n      }).catch(function (e) {\n        if (e.code === 11 && Browser.msedge) {\n          // InvalidStateError on Microsoft Edge\n          // Workaround: Edge may throw InvalidStateError after ReadableStreamReader.cancel() call\n          // Ignore the unknown exception.\n          // Related issue: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11265202/\n          return;\n        }\n\n        _this3._status = LoaderStatus.kError;\n        var type = 0;\n        var info = null;\n\n        if ((e.code === 19 || e.message === 'network error') && ( // NETWORK_ERR\n        _this3._contentLength === null || _this3._contentLength !== null && _this3._receivedLength < _this3._contentLength)) {\n          type = LoaderErrors.EARLY_EOF;\n          info = {\n            code: e.code,\n            msg: 'Fetch stream meet Early-EOF'\n          };\n        } else {\n          type = LoaderErrors.EXCEPTION;\n          info = {\n            code: e.code,\n            msg: e.message\n          };\n        }\n\n        if (_this3._onError) {\n          _this3._onError(type, info);\n        } else {\n          throw new RuntimeException(info.msg);\n        }\n      });\n    }\n  }]);\n\n  return FetchStreamLoader;\n}(BaseLoader);\n\nexport default FetchStreamLoader;","map":{"version":3,"sources":["/Users/mitchlew/Documents/Streaming/streams/client/node_modules/flv.js/src/io/fetch-stream-loader.js"],"names":["Log","Browser","BaseLoader","LoaderStatus","LoaderErrors","RuntimeException","FetchStreamLoader","isWorkWellEdge","msedge","version","minor","browserNotBlacklisted","self","fetch","ReadableStream","e","seekHandler","config","TAG","_seekHandler","_config","_needStash","_requestAbort","_contentLength","_receivedLength","isWorking","abort","dataSource","range","_dataSource","_range","sourceURL","url","reuseRedirectedURL","redirectedURL","undefined","seekConfig","getConfig","headers","Headers","configHeaders","key","hasOwnProperty","append","params","method","mode","cache","referrerPolicy","cors","withCredentials","credentials","_status","kConnecting","then","res","kIdle","ok","status","_onURLRedirect","removeURLParameters","lengthHeader","get","parseInt","_onContentLengthKnown","_pump","call","body","getReader","kError","_onError","HTTP_STATUS_CODE_INVALID","code","msg","statusText","catch","EXCEPTION","message","reader","read","result","done","type","EARLY_EOF","info","kComplete","_onComplete","from","cancel","kBuffering","chunk","value","buffer","byteStart","byteLength","_onDataArrival"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport Browser from '../utils/browser.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n/* fetch + stream IO loader. Currently working on chrome 43+.\n * fetch provides a better alternative http API to XMLHttpRequest\n *\n * fetch spec   https://fetch.spec.whatwg.org/\n * stream spec  https://streams.spec.whatwg.org/\n */\nclass FetchStreamLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            // fetch + stream is broken on Microsoft Edge. Disable before build 15048.\n            // see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8196907/\n            // Fixed in Jan 10, 2017. Build 15048+ removed from blacklist.\n            let isWorkWellEdge = Browser.msedge && Browser.version.minor >= 15048;\n            let browserNotBlacklisted = Browser.msedge ? isWorkWellEdge : true;\n            return (self.fetch && self.ReadableStream && browserNotBlacklisted);\n        } catch (e) {\n            return false;\n        }\n    }\n\n    constructor(seekHandler, config) {\n        super('fetch-stream-loader');\n        this.TAG = 'FetchStreamLoader';\n\n        this._seekHandler = seekHandler;\n        this._config = config;\n        this._needStash = true;\n\n        this._requestAbort = false;\n        this._contentLength = null;\n        this._receivedLength = 0;\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        super.destroy();\n    }\n\n    open(dataSource, range) {\n        this._dataSource = dataSource;\n        this._range = range;\n\n        let sourceURL = dataSource.url;\n        if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {\n            sourceURL = dataSource.redirectedURL;\n        }\n\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\n\n        let headers = new self.Headers();\n\n        if (typeof seekConfig.headers === 'object') {\n            let configHeaders = seekConfig.headers;\n            for (let key in configHeaders) {\n                if (configHeaders.hasOwnProperty(key)) {\n                    headers.append(key, configHeaders[key]);\n                }\n            }\n        }\n\n        let params = {\n            method: 'GET',\n            headers: headers,\n            mode: 'cors',\n            cache: 'default',\n            // The default policy of Fetch API in the whatwg standard\n            // Safari incorrectly indicates 'no-referrer' as default policy, fuck it\n            referrerPolicy: 'no-referrer-when-downgrade'\n        };\n\n        // add additional headers\n        if (typeof this._config.headers === 'object') {\n            for (let key in this._config.headers) {\n                headers.append(key, this._config.headers[key]);\n            }\n        }\n\n        // cors is enabled by default\n        if (dataSource.cors === false) {\n            // no-cors means 'disregard cors policy', which can only be used in ServiceWorker\n            params.mode = 'same-origin';\n        }\n\n        // withCredentials is disabled by default\n        if (dataSource.withCredentials) {\n            params.credentials = 'include';\n        }\n\n        // referrerPolicy from config\n        if (dataSource.referrerPolicy) {\n            params.referrerPolicy = dataSource.referrerPolicy;\n        }\n\n        this._status = LoaderStatus.kConnecting;\n        self.fetch(seekConfig.url, params).then((res) => {\n            if (this._requestAbort) {\n                this._requestAbort = false;\n                this._status = LoaderStatus.kIdle;\n                return;\n            }\n            if (res.ok && (res.status >= 200 && res.status <= 299)) {\n                if (res.url !== seekConfig.url) {\n                    if (this._onURLRedirect) {\n                        let redirectedURL = this._seekHandler.removeURLParameters(res.url);\n                        this._onURLRedirect(redirectedURL);\n                    }\n                }\n\n                let lengthHeader = res.headers.get('Content-Length');\n                if (lengthHeader != null) {\n                    this._contentLength = parseInt(lengthHeader);\n                    if (this._contentLength !== 0) {\n                        if (this._onContentLengthKnown) {\n                            this._onContentLengthKnown(this._contentLength);\n                        }\n                    }\n                }\n\n                return this._pump.call(this, res.body.getReader());\n            } else {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: res.status, msg: res.statusText});\n                } else {\n                    throw new RuntimeException('FetchStreamLoader: Http code invalid, ' + res.status + ' ' + res.statusText);\n                }\n            }\n        }).catch((e) => {\n            this._status = LoaderStatus.kError;\n            if (this._onError) {\n                this._onError(LoaderErrors.EXCEPTION, {code: -1, msg: e.message});\n            } else {\n                throw e;\n            }\n        });\n    }\n\n    abort() {\n        this._requestAbort = true;\n    }\n\n    _pump(reader) {  // ReadableStreamReader\n        return reader.read().then((result) => {\n            if (result.done) {\n                // First check received length\n                if (this._contentLength !== null && this._receivedLength < this._contentLength) {\n                    // Report Early-EOF\n                    this._status = LoaderStatus.kError;\n                    let type = LoaderErrors.EARLY_EOF;\n                    let info = {code: -1, msg: 'Fetch stream meet Early-EOF'};\n                    if (this._onError) {\n                        this._onError(type, info);\n                    } else {\n                        throw new RuntimeException(info.msg);\n                    }\n                } else {\n                    // OK. Download complete\n                    this._status = LoaderStatus.kComplete;\n                    if (this._onComplete) {\n                        this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n                    }\n                }\n            } else {\n                if (this._requestAbort === true) {\n                    this._requestAbort = false;\n                    this._status = LoaderStatus.kComplete;\n                    return reader.cancel();\n                }\n\n                this._status = LoaderStatus.kBuffering;\n\n                let chunk = result.value.buffer;\n                let byteStart = this._range.from + this._receivedLength;\n                this._receivedLength += chunk.byteLength;\n\n                if (this._onDataArrival) {\n                    this._onDataArrival(chunk, byteStart, this._receivedLength);\n                }\n\n                this._pump(reader);\n            }\n        }).catch((e) => {\n            if (e.code === 11 && Browser.msedge) {  // InvalidStateError on Microsoft Edge\n                // Workaround: Edge may throw InvalidStateError after ReadableStreamReader.cancel() call\n                // Ignore the unknown exception.\n                // Related issue: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11265202/\n                return;\n            }\n\n            this._status = LoaderStatus.kError;\n            let type = 0;\n            let info = null;\n\n            if ((e.code === 19 || e.message === 'network error') && // NETWORK_ERR\n                (this._contentLength === null ||\n                (this._contentLength !== null && this._receivedLength < this._contentLength))) {\n                type = LoaderErrors.EARLY_EOF;\n                info = {code: e.code, msg: 'Fetch stream meet Early-EOF'};\n            } else {\n                type = LoaderErrors.EXCEPTION;\n                info = {code: e.code, msg: e.message};\n            }\n\n            if (this._onError) {\n                this._onError(type, info);\n            } else {\n                throw new RuntimeException(info.msg);\n            }\n        });\n    }\n\n}\n\nexport default FetchStreamLoader;\n"]},"metadata":{},"sourceType":"module"}