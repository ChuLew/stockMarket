{"ast":null,"code":"var _jsxFileName = \"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/dashboard/Chart.js\";\nimport React from \"react\";\nimport { ResponsiveContainer } from \"recharts\";\nimport Title from \"./Title\";\nimport Plot from 'react-plotly.js';\nimport { connect } from 'react-redux';\nimport { getStocks } from '../actions';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n  }\n\n  fetchStock() {\n    console.log(this.props.currentCompany);\n    const pointerToThis = this;\n    console.log(pointerToThis);\n    const API_KEY = '82N2UO66AVHA2EFY';\n    let StockSymbol = this.props.currentCompany;\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      //console.log(data);\n      for (var key in data['Time Series (Daily)']) {\n        stockChartXValuesFunction.push(key);\n        stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n      } // console.log(stockChartXValuesFunction);\n\n\n      pointerToThis.setState({\n        stockChartXValues: stockChartXValuesFunction,\n        stockChartYValues: stockChartYValuesFunction\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, \"Today\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Plot, {\n      data: [{\n        x: this.state.stockChartXValues,\n        y: this.state.stockChartYValues,\n        type: 'scatter',\n        mode: 'lines+markers',\n        marker: {\n          color: 'red'\n        }\n      }],\n      layout: {\n        width: 850,\n        height: 440,\n        title: `Market trend for ${this.props.currentCompany}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    companies: state.stocks.currentCompany\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStocks\n})(Chart);","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/dashboard/Chart.js"],"names":["React","ResponsiveContainer","Title","Plot","connect","getStocks","Chart","Component","constructor","props","state","stockChartXValues","stockChartYValues","componentDidMount","fetchStock","console","log","currentCompany","pointerToThis","API_KEY","StockSymbol","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","setState","render","x","y","type","mode","marker","color","width","height","title","mapStateToProps","companies","stocks"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {ResponsiveContainer} from \"recharts\";\nimport Title from \"./Title\";\nimport Plot from 'react-plotly.js';\nimport { connect } from 'react-redux';\nimport { getStocks } from '../actions';\n\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: []\n    }\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n  }\n\n  fetchStock() {\n    console.log(this.props.currentCompany)\n    const pointerToThis = this;\n    console.log(pointerToThis);\n    const API_KEY = '82N2UO66AVHA2EFY';\n    let StockSymbol = this.props.currentCompany;\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n\n    fetch(API_Call)\n      .then(\n        function(response) {\n          return response.json();\n        }\n      )\n      .then(\n        function(data) {\n          //console.log(data);\n\n          for (var key in data['Time Series (Daily)']) {\n            stockChartXValuesFunction.push(key);\n            stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n          }\n\n          // console.log(stockChartXValuesFunction);\n          pointerToThis.setState({\n            stockChartXValues: stockChartXValuesFunction,\n            stockChartYValues: stockChartYValuesFunction\n          });\n        }\n      )\n  }\n  render() {\n    return  (\n      <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n      <Plot\n          data={[\n            {\n              x: this.state.stockChartXValues,\n              y: this.state.stockChartYValues,\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: {color: 'red'},\n            }\n          ]}\n          layout={{width: 850, height: 440, title: `Market trend for ${this.props.currentCompany}`}}\n        />\n      </ResponsiveContainer>\n    </React.Fragment>\n    );\n  };\n}\nconst mapStateToProps = (state) => {\n  return {\n    companies:state.stocks.currentCompany\n  };\n};\nexport default connect(\n  mapStateToProps,\n  { getStocks }\n)(Chart);\n"]},"metadata":{},"sourceType":"module"}