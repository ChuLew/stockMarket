{"ast":null,"code":"import _classCallCheck from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _get from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mitchlew/Documents/Streaming/streams/client/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Log from '../utils/logger.js';\nimport { BaseLoader, LoaderStatus, LoaderErrors } from './loader.js';\nimport { RuntimeException } from '../utils/exception.js'; // For FireFox browser which supports `xhr.responseType = 'moz-chunked-arraybuffer'`\n\nvar MozChunkedLoader = /*#__PURE__*/function (_BaseLoader) {\n  _inherits(MozChunkedLoader, _BaseLoader);\n\n  var _super = _createSuper(MozChunkedLoader);\n\n  _createClass(MozChunkedLoader, null, [{\n    key: \"isSupported\",\n    value: function isSupported() {\n      try {\n        var xhr = new XMLHttpRequest(); // Firefox 37- requires .open() to be called before setting responseType\n\n        xhr.open('GET', 'https://example.com', true);\n        xhr.responseType = 'moz-chunked-arraybuffer';\n        return xhr.responseType === 'moz-chunked-arraybuffer';\n      } catch (e) {\n        Log.w('MozChunkedLoader', e.message);\n        return false;\n      }\n    }\n  }]);\n\n  function MozChunkedLoader(seekHandler, config) {\n    var _this;\n\n    _classCallCheck(this, MozChunkedLoader);\n\n    _this = _super.call(this, 'xhr-moz-chunked-loader');\n    _this.TAG = 'MozChunkedLoader';\n    _this._seekHandler = seekHandler;\n    _this._config = config;\n    _this._needStash = true;\n    _this._xhr = null;\n    _this._requestAbort = false;\n    _this._contentLength = null;\n    _this._receivedLength = 0;\n    return _this;\n  }\n\n  _createClass(MozChunkedLoader, [{\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.isWorking()) {\n        this.abort();\n      }\n\n      if (this._xhr) {\n        this._xhr.onreadystatechange = null;\n        this._xhr.onprogress = null;\n        this._xhr.onloadend = null;\n        this._xhr.onerror = null;\n        this._xhr = null;\n      }\n\n      _get(_getPrototypeOf(MozChunkedLoader.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"open\",\n    value: function open(dataSource, range) {\n      this._dataSource = dataSource;\n      this._range = range;\n      var sourceURL = dataSource.url;\n\n      if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {\n        sourceURL = dataSource.redirectedURL;\n      }\n\n      var seekConfig = this._seekHandler.getConfig(sourceURL, range);\n\n      this._requestURL = seekConfig.url;\n      var xhr = this._xhr = new XMLHttpRequest();\n      xhr.open('GET', seekConfig.url, true);\n      xhr.responseType = 'moz-chunked-arraybuffer';\n      xhr.onreadystatechange = this._onReadyStateChange.bind(this);\n      xhr.onprogress = this._onProgress.bind(this);\n      xhr.onloadend = this._onLoadEnd.bind(this);\n      xhr.onerror = this._onXhrError.bind(this); // cors is auto detected and enabled by xhr\n      // withCredentials is disabled by default\n\n      if (dataSource.withCredentials) {\n        xhr.withCredentials = true;\n      }\n\n      if (typeof seekConfig.headers === 'object') {\n        var headers = seekConfig.headers;\n\n        for (var key in headers) {\n          if (headers.hasOwnProperty(key)) {\n            xhr.setRequestHeader(key, headers[key]);\n          }\n        }\n      } // add additional headers\n\n\n      if (typeof this._config.headers === 'object') {\n        var _headers = this._config.headers;\n\n        for (var _key in _headers) {\n          if (_headers.hasOwnProperty(_key)) {\n            xhr.setRequestHeader(_key, _headers[_key]);\n          }\n        }\n      }\n\n      this._status = LoaderStatus.kConnecting;\n      xhr.send();\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this._requestAbort = true;\n\n      if (this._xhr) {\n        this._xhr.abort();\n      }\n\n      this._status = LoaderStatus.kComplete;\n    }\n  }, {\n    key: \"_onReadyStateChange\",\n    value: function _onReadyStateChange(e) {\n      var xhr = e.target;\n\n      if (xhr.readyState === 2) {\n        // HEADERS_RECEIVED\n        if (xhr.responseURL != undefined && xhr.responseURL !== this._requestURL) {\n          if (this._onURLRedirect) {\n            var redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\n\n            this._onURLRedirect(redirectedURL);\n          }\n        }\n\n        if (xhr.status !== 0 && (xhr.status < 200 || xhr.status > 299)) {\n          this._status = LoaderStatus.kError;\n\n          if (this._onError) {\n            this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {\n              code: xhr.status,\n              msg: xhr.statusText\n            });\n          } else {\n            throw new RuntimeException('MozChunkedLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n          }\n        } else {\n          this._status = LoaderStatus.kBuffering;\n        }\n      }\n    }\n  }, {\n    key: \"_onProgress\",\n    value: function _onProgress(e) {\n      if (this._status === LoaderStatus.kError) {\n        // Ignore error response\n        return;\n      }\n\n      if (this._contentLength === null) {\n        if (e.total !== null && e.total !== 0) {\n          this._contentLength = e.total;\n\n          if (this._onContentLengthKnown) {\n            this._onContentLengthKnown(this._contentLength);\n          }\n        }\n      }\n\n      var chunk = e.target.response;\n      var byteStart = this._range.from + this._receivedLength;\n      this._receivedLength += chunk.byteLength;\n\n      if (this._onDataArrival) {\n        this._onDataArrival(chunk, byteStart, this._receivedLength);\n      }\n    }\n  }, {\n    key: \"_onLoadEnd\",\n    value: function _onLoadEnd(e) {\n      if (this._requestAbort === true) {\n        this._requestAbort = false;\n        return;\n      } else if (this._status === LoaderStatus.kError) {\n        return;\n      }\n\n      this._status = LoaderStatus.kComplete;\n\n      if (this._onComplete) {\n        this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n      }\n    }\n  }, {\n    key: \"_onXhrError\",\n    value: function _onXhrError(e) {\n      this._status = LoaderStatus.kError;\n      var type = 0;\n      var info = null;\n\n      if (this._contentLength && e.loaded < this._contentLength) {\n        type = LoaderErrors.EARLY_EOF;\n        info = {\n          code: -1,\n          msg: 'Moz-Chunked stream meet Early-Eof'\n        };\n      } else {\n        type = LoaderErrors.EXCEPTION;\n        info = {\n          code: -1,\n          msg: e.constructor.name + ' ' + e.type\n        };\n      }\n\n      if (this._onError) {\n        this._onError(type, info);\n      } else {\n        throw new RuntimeException(info.msg);\n      }\n    }\n  }]);\n\n  return MozChunkedLoader;\n}(BaseLoader);\n\nexport default MozChunkedLoader;","map":{"version":3,"sources":["/Users/mitchlew/Documents/Streaming/streams/client/node_modules/flv.js/src/io/xhr-moz-chunked-loader.js"],"names":["Log","BaseLoader","LoaderStatus","LoaderErrors","RuntimeException","MozChunkedLoader","xhr","XMLHttpRequest","open","responseType","e","w","message","seekHandler","config","TAG","_seekHandler","_config","_needStash","_xhr","_requestAbort","_contentLength","_receivedLength","isWorking","abort","onreadystatechange","onprogress","onloadend","onerror","dataSource","range","_dataSource","_range","sourceURL","url","reuseRedirectedURL","redirectedURL","undefined","seekConfig","getConfig","_requestURL","_onReadyStateChange","bind","_onProgress","_onLoadEnd","_onXhrError","withCredentials","headers","key","hasOwnProperty","setRequestHeader","_status","kConnecting","send","kComplete","target","readyState","responseURL","_onURLRedirect","removeURLParameters","status","kError","_onError","HTTP_STATUS_CODE_INVALID","code","msg","statusText","kBuffering","total","_onContentLengthKnown","chunk","response","byteStart","from","byteLength","_onDataArrival","_onComplete","type","info","loaded","EARLY_EOF","EXCEPTION","constructor","name"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n// For FireFox browser which supports `xhr.responseType = 'moz-chunked-arraybuffer'`\nclass MozChunkedLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            let xhr = new XMLHttpRequest();\n            // Firefox 37- requires .open() to be called before setting responseType\n            xhr.open('GET', 'https://example.com', true);\n            xhr.responseType = 'moz-chunked-arraybuffer';\n            return (xhr.responseType === 'moz-chunked-arraybuffer');\n        } catch (e) {\n            Log.w('MozChunkedLoader', e.message);\n            return false;\n        }\n    }\n\n    constructor(seekHandler, config) {\n        super('xhr-moz-chunked-loader');\n        this.TAG = 'MozChunkedLoader';\n\n        this._seekHandler = seekHandler;\n        this._config = config;\n        this._needStash = true;\n\n        this._xhr = null;\n        this._requestAbort = false;\n        this._contentLength = null;\n        this._receivedLength = 0;\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr.onprogress = null;\n            this._xhr.onloadend = null;\n            this._xhr.onerror = null;\n            this._xhr = null;\n        }\n        super.destroy();\n    }\n\n    open(dataSource, range) {\n        this._dataSource = dataSource;\n        this._range = range;\n\n        let sourceURL = dataSource.url;\n        if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {\n            sourceURL = dataSource.redirectedURL;\n        }\n\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\n        this._requestURL = seekConfig.url;\n\n        let xhr = this._xhr = new XMLHttpRequest();\n        xhr.open('GET', seekConfig.url, true);\n        xhr.responseType = 'moz-chunked-arraybuffer';\n        xhr.onreadystatechange = this._onReadyStateChange.bind(this);\n        xhr.onprogress = this._onProgress.bind(this);\n        xhr.onloadend = this._onLoadEnd.bind(this);\n        xhr.onerror = this._onXhrError.bind(this);\n\n        // cors is auto detected and enabled by xhr\n\n        // withCredentials is disabled by default\n        if (dataSource.withCredentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (typeof seekConfig.headers === 'object') {\n            let headers = seekConfig.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        // add additional headers\n        if (typeof this._config.headers === 'object') {\n            let headers = this._config.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        this._status = LoaderStatus.kConnecting;\n        xhr.send();\n    }\n\n    abort() {\n        this._requestAbort = true;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _onReadyStateChange(e) {\n        let xhr = e.target;\n\n        if (xhr.readyState === 2) {  // HEADERS_RECEIVED\n            if (xhr.responseURL != undefined && xhr.responseURL !== this._requestURL) {\n                if (this._onURLRedirect) {\n                    let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\n                    this._onURLRedirect(redirectedURL);\n                }\n            }\n\n            if (xhr.status !== 0 && (xhr.status < 200 || xhr.status > 299)) {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\n                } else {\n                    throw new RuntimeException('MozChunkedLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n                }\n            } else {\n                this._status = LoaderStatus.kBuffering;\n            }\n        }\n    }\n\n    _onProgress(e) {\n        if (this._status === LoaderStatus.kError) {\n            // Ignore error response\n            return;\n        }\n\n        if (this._contentLength === null) {\n            if (e.total !== null && e.total !== 0) {\n                this._contentLength = e.total;\n                if (this._onContentLengthKnown) {\n                    this._onContentLengthKnown(this._contentLength);\n                }\n            }\n        }\n\n        let chunk = e.target.response;\n        let byteStart = this._range.from + this._receivedLength;\n        this._receivedLength += chunk.byteLength;\n\n        if (this._onDataArrival) {\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\n        }\n    }\n\n    _onLoadEnd(e) {\n        if (this._requestAbort === true) {\n            this._requestAbort = false;\n            return;\n        } else if (this._status === LoaderStatus.kError) {\n            return;\n        }\n\n        this._status = LoaderStatus.kComplete;\n        if (this._onComplete) {\n            this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n        }\n    }\n\n    _onXhrError(e) {\n        this._status = LoaderStatus.kError;\n        let type = 0;\n        let info = null;\n\n        if (this._contentLength && e.loaded < this._contentLength) {\n            type = LoaderErrors.EARLY_EOF;\n            info = {code: -1, msg: 'Moz-Chunked stream meet Early-Eof'};\n        } else {\n            type = LoaderErrors.EXCEPTION;\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\n        }\n\n        if (this._onError) {\n            this._onError(type, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n}\n\nexport default MozChunkedLoader;"]},"metadata":{},"sourceType":"module"}