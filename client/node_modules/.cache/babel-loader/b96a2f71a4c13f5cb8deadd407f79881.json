{"ast":null,"code":"import _classCallCheck from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{ResponsiveContainer}from\"recharts\";import Title from\"./Title\";import Plot from\"react-plotly.js\";import{connect}from\"react-redux\";import{getStocks}from\"../actions\";var Chart=/*#__PURE__*/function(_React$Component){_inherits(Chart,_React$Component);var _super=_createSuper(Chart);function Chart(props){var _this;_classCallCheck(this,Chart);_this=_super.call(this,props);_this.state={stockChartXValues:[],stockChartYValues:[]};return _this;}_createClass(Chart,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getStocks(this.props.currentCompany);this.fetchStocks();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.currCompany!==this.props.currCompany){this.fetchStocks();}}},{key:\"fetchStocks\",value:function fetchStocks(){var pointerToThis=this;// console.log(pointerToThis);\nvar API_KEY='HGJWFG4N8AQ66ICD';var StockSymbol=this.props.currCompany;var API_Call=\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=\".concat(StockSymbol,\"&outputsize=compact&apikey=\").concat(API_KEY);var stockChartXValuesFunction=[];var stockChartYValuesFunction=[];fetch(API_Call).then(function(response){return response.json();}).then(function(data){//console.log(data);\nif('Note'in data){alert(data.Note);}if('Error Message'in data){alert(\"No Ticker exists for your input String Please input valid Ticker Symbol\");}for(var key in data['Time Series (Daily)']){stockChartXValuesFunction.push(key);stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);}pointerToThis.setState({stockChartXValues:stockChartXValuesFunction,stockChartYValues:stockChartYValuesFunction});});}},{key:\"fetchStock\",value:function fetchStock(){var stockChartXValuesFunction=[];var stockChartYValuesFunction=[];for(var key in this.props.historics){stockChartXValuesFunction.push(key);stockChartYValuesFunction.push(this.props.historics[key][\"1. open\"]);}this.setState({stockChartXValues:stockChartXValuesFunction,stockChartYValues:stockChartYValuesFunction});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Title,null,\"Today\"),/*#__PURE__*/React.createElement(ResponsiveContainer,null,/*#__PURE__*/React.createElement(Plot,{data:[{x:this.state.stockChartXValues,y:this.state.stockChartYValues,type:\"scatter\",mode:\"lines+markers\",marker:{color:\"red\"}}],layout:{width:850,height:440,title:this.props.currCompany}})));}}]);return Chart;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{currCompany:state.stocks.currentCompany,historics:state.stocks.companyInfo};};export default connect(mapStateToProps,{getStocks:getStocks})(Chart);","map":{"version":3,"sources":["/Users/mitchlew/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/Stock/client/src/dashboard/Chart.js"],"names":["React","ResponsiveContainer","Title","Plot","connect","getStocks","Chart","props","state","stockChartXValues","stockChartYValues","currentCompany","fetchStocks","prevProps","currCompany","pointerToThis","API_KEY","StockSymbol","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","alert","Note","key","push","setState","historics","x","y","type","mode","marker","color","width","height","title","Component","mapStateToProps","stocks","companyInfo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ResponsiveContainer } from \"recharts\";\nimport Title from \"./Title\";\nimport Plot from \"react-plotly.js\";\nimport { connect } from \"react-redux\";\nimport { getStocks} from \"../actions\";\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: [],\n    };\n  }      \n\n  componentDidMount() {\n    this.props.getStocks(this.props.currentCompany);\n    this.fetchStocks();\n    \n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.currCompany !== this.props.currCompany) {\n      this.fetchStocks();\n    }\n  }\n\n  fetchStocks() {\n    const pointerToThis = this;\n   // console.log(pointerToThis);\n    const API_KEY = 'HGJWFG4N8AQ66ICD';\n    let StockSymbol = this.props.currCompany;\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n\n    fetch(API_Call)\n      .then(\n        function(response) {\n          return response.json();\n        }\n      )\n      .then(\n        function(data) {\n          //console.log(data);\n\n          if ('Note' in data){\n             alert(data.Note);\n          }\n          if ('Error Message' in data){\n            alert(\"No Ticker exists for your input String Please input valid Ticker Symbol\")\n          }\n         \n\n          for (var key in data['Time Series (Daily)']) {\n            stockChartXValuesFunction.push(key);\n            stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n          }\n          pointerToThis.setState({\n            stockChartXValues: stockChartXValuesFunction,\n            stockChartYValues: stockChartYValuesFunction\n          });\n        }\n      )\n  }\n  fetchStock() {\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n    for (var key in this.props.historics) {\n      stockChartXValuesFunction.push(key);\n      stockChartYValuesFunction.push(this.props.historics[key][\"1. open\"]);\n    }\n    this.setState({\n      stockChartXValues: stockChartXValuesFunction,\n      stockChartYValues: stockChartYValuesFunction,\n    });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Title>Today</Title>\n        <ResponsiveContainer>\n          <Plot\n            data={[\n              {\n                x: this.state.stockChartXValues,\n                y: this.state.stockChartYValues,\n                type: \"scatter\",\n                mode: \"lines+markers\",\n                marker: { color: \"red\" },\n              },\n            ]}\n            layout={{ width: 850, height: 440, title: this.props.currCompany }}\n          />\n        </ResponsiveContainer>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    currCompany: state.stocks.currentCompany,\n    historics: state.stocks.companyInfo,\n  };\n};\nexport default connect(mapStateToProps, { getStocks })(Chart);\n"]},"metadata":{},"sourceType":"module"}